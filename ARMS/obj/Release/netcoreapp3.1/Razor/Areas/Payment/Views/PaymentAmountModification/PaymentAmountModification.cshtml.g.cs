#pragma checksum "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3ef5a28be1c953da530ddd93fd7636c269fbb82a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Payment_Views_PaymentAmountModification_PaymentAmountModification), @"mvc.1.0.view", @"/Areas/Payment/Views/PaymentAmountModification/PaymentAmountModification.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\TT\Finalarms\ARMS\Areas\_ViewImports.cshtml"
using ARMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\TT\Finalarms\ARMS\Areas\_ViewImports.cshtml"
using ARMS.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
using CORE_BOL;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3ef5a28be1c953da530ddd93fd7636c269fbb82a", @"/Areas/Payment/Views/PaymentAmountModification/PaymentAmountModification.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b4a8197006c533ca3077e7e53fa27a725fee456", @"/Areas/_ViewImports.cshtml")]
    public class Areas_Payment_Views_PaymentAmountModification_PaymentAmountModification : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PaymentAmountModification>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "PaymentAmountModification", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "DemandUpload", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "file", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("Sign Path"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("fileSelect(event)"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 6 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
  
    ViewData["Title"] = "PaymentAmountModification";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h1 class=""m-0 text-dark""></h1>
            </div><!-- /.col -->
            <div class=""col-sm-6"">
                <ol class=""breadcrumb float-sm-right"">
                    <li class=""breadcrumb-item"">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3ef5a28be1c953da530ddd93fd7636c269fbb82a5927", async() => {
                WriteLiteral("Payment");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</li>
                    <li class=""breadcrumb-item active"">Payment Modification</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>


<div class=""card card-info"">
    <div class=""card-header"">
        <h3 class=""card-title"">Payment Amount Modification</h3>
    </div>
    <div class=""card-body"">
        <div class=""row"">
            <div class=""col-md-12"">
                <div class=""card card-primary card-tabs"">
                    <div class=""card-header p-0 pt-1"">
                        <ul class=""nav nav-tabs"" id=""custom-tabs-five-tab"" role=""tablist"" style=""cursor:pointer"">
                            <li class=""nav-item"">
                                <a class=""nav-link active"" data-toggle=""tab"" role=""tab"" onclick=""return Demand();"">Demand Modification</a>
                            </li>
                            <li class=""nav-item"">
                                <a class=""nav-link"" href=""#m");
            WriteLiteral(@"enu3"" data-toggle=""tab"" role=""tab"" onclick=""return Payment();"">Payment Modification</a>
                            </li>
                        </ul>
                    </div>

                    <!-- /.card -->
                </div>
            </div>
        </div>
    </div>
    <div class=""card card-info"" id=""DemandDetails"">
        <div class=""card-header"">
            <h3 class=""card-title"">Search By Demand No</h3>
        </div>
        <div class=""card-body"">
            <div class=""row"">
                <div class=""input-group d-flex justify-content-center col-5"">
                    <label class=""col-sm-4 col-form-label"">Demand No:<span style=""font-weight: bold; color: red;""></span></label>
                    <input id=""SearchDemandNo"" class=""form-control col-6"" style=""text-transform:uppercase"" />
                </div>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <input type=""button"" value=""Search"" class=""btn btn-primary"" onclick=""return DisplayDem");
            WriteLiteral(@"andDetails();"" />
            </div>
        </div>
    </div>

    <div class=""card card-info"" id=""ReceiptDetails"" style=""display:none;"">
        <div class=""card-header"">
            <h3 class=""card-title"">Search By Receipt No</h3>
        </div>
        <div class=""card-body"">
            <div class=""row"">
                <div class=""input-group d-flex justify-content-center col-5"">
                    <label class=""col-sm-4 col-form-label"">Receipt No:<span style=""font-weight: bold; color: red;""></span></label>
                    <input id=""SearchReceiptNo"" class=""form-control col-6"" style=""text-transform:uppercase"" />
                </div>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <input type=""button"" value=""Search"" class=""btn btn-primary"" onclick=""return DisplayReceiptDetails();"" />
            </div>
        </div>
    </div>

    <div class=""card card-info"" style=""display:none;"" id=""DisplayDemandDetails"">
        <div class=""card-header"">
            ");
            WriteLiteral(@"<h3 class=""card-title"">Demand Details</h3>
        </div>
        <div class=""card-body"">
            <table class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">

                    <tr>
                        <th>#</th>
                        <th>Demand No</th>
                        <th>Tax Name</th>
                        <th>Tax Payer Name</th>
                        <th>Demand Amount</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id=""tbl_demanddetails"">
                </tbody>
            </table>
        </div>
    </div>

    <div class=""card card-info"" style=""display:none;"" id=""DisplayReceiptDetails"">
        <div class=""card-header"">
            <input type=""hidden"" id=""HDNLedgerId"" />
            <input type=""hidden"" id=""HDNPaymentLedgerId"" />
            <h3 class=""card-title"">Receipt Details</h3>
        </div>
        <div class=""card-b");
            WriteLiteral(@"ody"">
            <table class=""table table-bordered table-striped"" id=""tblPaymentAmounts"">
                <thead style=""background-color:mediumaquamarine"">

                    <tr>
                        <th>#</th>
                        <th>Receipt No</th>
                        <th>Tax Name</th>
                        <th>Tax Payer Name</th>
                        <th>Previous Amount</th>
                        <th>Enter Amount</th>
                        <th>Total New Amount</th>
                    </tr>
                </thead>
                <tbody id=""tbl_receiptdetails"">
                </tbody>
            </table>
            <br />
            <div class=""form-group row"">
                <div class=""col-sm-7""></div>
                <label class=""col-sm-2 col-form-label"">Grand Total</label>
                <div class=""col-sm-3"">
                    <input type=""number"" id=""HDNGrandTotalPayment"" class=""form-control"" readonly />
                </div>
            </d");
            WriteLiteral(@"iv>
        </div>
    </div>

    <div class=""card card-info"" style=""display:none;"" id=""Show"">
        <input type=""hidden"" id=""HDNPreviousPaymentAmount"" />
    </div>

    <div class=""card card-info"" style=""display:none;"" id=""DisplayPaymentModeDetails"">
        <div class=""card-header"">
            <h3 class=""card-title"">Payment Mode Details</h3>
        </div>
        <div class=""card-body"">
            <table class=""table table-bordered table-striped"" id=""tblpaymentmodedetails"">
                <thead style=""background-color:mediumaquamarine"">

                    <tr>
                        <th>#</th>
                        <th>Payment Mode</th>
                        <th>Payment Mode No</th>
                        <th>Payment Mode Date</th>
                        <th>Previous Payment Amount</th>
                        <th>Enter Amount</th>
                        <th>Total New Amount</th>
                    </tr>
                </thead>
                <tbody id=""tbl_pa");
            WriteLiteral(@"ymentmodedetails"">
                </tbody>
            </table>
            <br />
            <div class=""form-group row"">
                <label class=""col-sm-2 col-form-label"">Upload Demand<span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3 custom-file"">
                    <input id=""UReceipt"" type=""file"" placeholder=""Upload"" required />
                </div>
                <div class=""col-sm-2""></div>
                <label class=""col-sm-2 col-form-label"">Grand Total</label>
                <div class=""col-sm-3"">
                    <input type=""number"" id=""HDNGrandTotalPaymentMode"" class=""form-control"" readonly />
                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-sm-3 col-form-label""></label>
                <div class=""col-sm-3"">
                    <button type=""submit"" class=""btn btn-primary"" onclick=""return SavePaymentAmount(), SavePaymentModeAmount();"">Save</button>");
            WriteLiteral(@"
                    <button id=""btnCancel1"" class=""btn btn-warning"">Cancel</button>
                </div>
            </div>
        </div>       
    </div>

    <div class=""card card-info"" style=""display:none;"" id=""DemandEntry"">
        <div class=""card-header"">
            <input type=""hidden"" id=""HDNDemandId"" />
            <input type=""hidden"" id=""HDNDemandAmount"" />
            <input type=""hidden"" id=""HDNDemandNo"" />
            <h3 class=""card-title"">Amount Entry</h3>
        </div>
        <div class=""card-body"">
            <div class=""form-group row"">
                <label class=""col-sm-3 col-form-label"">Previous Demand Amount</label>
                <div class=""col-sm-3"">
                    <input type=""number"" id=""OldDemandAmount"" class=""form-control"" readonly />
                </div>
                <label class=""col-sm-3 col-form-label"">Demand Amount<span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3"">
                   ");
            WriteLiteral(@" <input type=""number"" id=""NewDemandAmount"" class=""form-control"" placeholder=""Enter Demand Amount"" required />
                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-sm-3 col-form-label"">Upload Demand<span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3 custom-file"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3ef5a28be1c953da530ddd93fd7636c269fbb82a16232", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 208 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.DemandUpload);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Name = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("required", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-sm-3 col-form-label""></label>
                <div class=""col-sm-3"">
                    <button type=""submit"" class=""btn btn-primary"" onclick=""return SaveDemandAmount();"">Save</button>
                    <button id=""btnCancel"" class=""btn btn-warning"">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""></script>

<script>
                function Demand() {
                    $('#DemandDetails').show(1000);
                    $('#ReceiptDetails').hide(1000);
                    $('#ReceiptEntry').hide(1000);
                    $('#DisplayReceiptDetails').hide(1000);
                    $('#DisplayReceiptDetails').hide(1000);
                    $('#DisplayPaymentModeDetails').hide(1000);
                    $('#SearchReceiptNo').val('');
       ");
            WriteLiteral(@"         }
                function Payment() {
                    $('#ReceiptDetails').show(1000);
                    $('#DemandDetails').hide(1000);
                    $('#DisplayDemandDetails').hide(1000);
                    $('#DemandEntry').hide(1000);
                    $('#SearchDemandNo').val('');
                }

                function menu3() {
                    $('[href=""#menu3""]').tab('show');
                }

                function DisplayDemandDetails() {
                $('#DisplayReceiptDetails').hide(1000);
        if ($('#SearchDemandNo').val() == "" "") {
                swal('Empty Fields!', '', 'error');
                $('#SearchDemandNo').focus();
                return false;
                }

                $.ajax({
                    type: ""GET"",
                    url: '");
#nullable restore
#line 257 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
                     Write(Url.Action("GetDemandDetails", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        DemandNo: $('#SearchDemandNo').val()
                    },
                    success: function (data) {
                        $('#tbl_demanddetails').empty();
                        if (data.length > 0) {

                            $('#DisplayDemandDetails').show(1000);
                            $.each(data, function (key, value) {
                                $('#tbl_demanddetails').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.demandNo + '</td>'
                                    + '<td>' + value.taxName + '</td>'
                                    + '<td>' + value.taxPayerName + '</td>'
                                    + '<td>' + value.totalDemandAmount + '</td>'
                                    + '<td>'
                                    + '<a style = ""color: #007bff; cursor: pointer;"" onc");
            WriteLiteral(@"lick = ""return ViewDemand(' + value.demandId + ',' + value.totalDemandAmount + ',' + value.dsl +')"" title = ""View"">View</a >'
                                    + '</td>'
                                    + '</tr>');

                            });

                        } else {
                            $('#DisplayDemandDetails').show(1000);
                            $('#tbl_demanddetails').append(
                                '<tr><td colspan=""6"" style=""color: red;"">No record found!</td></tr>');
                        }

                    },

                    error: function () {
                        alert('error');
                    }

                });
    }
    function ViewDemand(demandId, totalDemandAmount, dsl) {
        $('#HDNDemandId').val(demandId);
        $('#HDNDemandAmount').val(totalDemandAmount);
        $('#OldDemandAmount').val(totalDemandAmount);
        $('#HDNDemandNo').val(dsl);
        $('#DemandEntry').show(1000);
    }

    func");
            WriteLiteral(@"tion SaveDemandAmount() {

            var a = document.getElementById(""DemandUpload"").files[0].name;

        var myarray = [];
        var PaymentAmountModification = {};

        PaymentAmountModification.DemandId = parseInt($('#HDNDemandId').val());
        PaymentAmountModification.PreviousDemandAmount = parseFloat($(""#OldDemandAmount"").val());
        PaymentAmountModification.TotalDemandAmount = parseFloat($(""#NewDemandAmount"").val());
        PaymentAmountModification.DSL = parseFloat($(""#HDNDemandNo"").val());
        PaymentAmountModification.DemandUpload = a;

        myarray.push(PaymentAmountModification);

        var json_data = JSON.stringify(myarray);
        console.log(json_data);
        $('#img').hide();

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 324 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
             Write(Url.Action("SaveDemand", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: json_data,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                if (response > 0) {
                    swal('Demand Saved Successfully!');
                    $('#DemandUpload').val('');
                    $('#NewDemandAmount').val('');
                    DisplayDemandDetails();                                                            
                    $('#DemandEntry').hide(1000);

                }
                else {
                    swal('Saving Failed!');
                    $('#img').hide();
                    return false;
                }
            },
            failure: function (response) {
                $('#img').hide();
                swal(""Creation Failed"");
            },
            error: function (response) {
                $('#img').hide();
                swal(""Error while inserting"");
            }
        });
        }

");
            WriteLiteral(@"






                function DisplayReceiptDetails() {
                    $('#DisplayDemandDetails').hide(1000);

        if ($('#SearchReceiptNo').val() == """") {
                swal('Empty Fields!', '', 'error');
            $('#SearchReceiptNo').focus();
                return false;
                }

                $.ajax({
                    type: ""GET"",
                    url: '");
#nullable restore
#line 372 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
                     Write(Url.Action("GetReceiptDetails", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        ReceiptNo: $('#SearchReceiptNo').val()
                    },
                    success: function (data) {
                        $('#tbl_receiptdetails').empty();
                        if (data.length > 0) {
                            var RI = data[0].receiptId;
                            var LI = data[0].ledgerId;
                            var PLI = data[0].paymentLedgerId;
                            var TPA = data[0].totalPaymentAmount;
                            ViewReceipt(RI, LI, PLI, TPA)
                            $('#DisplayReceiptDetails').show(1000);
                            $.each(data, function (key, value) {
                                $('#tbl_receiptdetails').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.receiptNo + '</td>'
                                    + '<td>' + value.taxNa");
            WriteLiteral(@"me + '</td>'
                                    + '<td>' + value.taxPayerName + '</td>'
                                    + '<td><input id=""DemandId_' + key + '"" type=""hidden"" value=""' + value.demandId + '"" />' + value.totalPaymentAmount + '<input type =""hidden"" id = ""OldAmount_' + key + '""  value = ""' + value.totalPaymentAmount + '"" class= ""form-control prd"" /> </td>'
                                    + '<input id=""LedgerId_' + key + '"" type=""hidden"" value=""' + value.ledgerId + '"" />'
                                    + '<input id=""PaymentLedgerId_' + key + '"" type=""hidden"" value=""' + value.paymentLedgerId + '"" />'
                                    + '<input id=""ReceiptNo_' + key + '"" type=""hidden"" value=""' + value.rsl + '"" />'
                                    + '<td><input id=""NewPaymentAmount' + key + '"" type=""number"" onkeyup=""return TotalAmount();""  value=""""  class=""form-control cmr"" /></td>'
                                    + '<td><input id=""NewTotalAmount_' + key + '"" type=""number""");
            WriteLiteral(@"  class=""form-control cm"" readonly value="""" /></td > '
                                    + '</tr>');


                            });

                        } else {
                            $('#DisplayReceiptDetails').show(1000);
                            $('#tbl_receiptdetails').append(
                                '<tr><td colspan=""6"" style=""color: red;"">No record found!</td></tr>');
                        }

                    },

                    error: function () {
                        alert('error');
                    }

                });
        }


    function ViewReceipt(receiptId, ledgerId, paymentLedgerId, totalPaymentAmount) {
        $('#HDNReceiptId').val(receiptId);
        $('#HDNLedgerId').val(ledgerId);
        $('#HDNPaymentLedgerId').val(paymentLedgerId);
        $('#HDNPreviousPaymentAmount').val(totalPaymentAmount);
    $.ajax({

                    type: ""GET"",
                    url: '");
#nullable restore
#line 427 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
                     Write(Url.Action("GetPaymentModeDetails", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        ReceiptId: receiptId
                    },
            success: function (data) {

                $('#Show').show(1000);

                        $('#tbl_paymentmodedetails').empty();
                if (data.length > 0) {
                    var PaymentDate = data[0].paymentModeDate;
                    const d = new Date(PaymentDate);
                            const PDate = (""0"" + d.getDate()).slice(-2) + '/' + (""0"" + (d.getMonth() + 1)).slice(-2) + '/' + d.getFullYear()
                            $('#DisplayPaymentModeDetails').show(1000);
                            $.each(data, function (key, value) {
                                $('#tbl_paymentmodedetails').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.paymentMode + '</td>'
                                    + '<td>' + value.paymentModeNo + '</td>'");
            WriteLiteral(@"
                                    + '<td>' + PDate + '</td>'
                                    + '<td>' + value.previousPaymentAmount + '<input type =""hidden"" id = ""OldPaymentModeAmount_' + key + '""  value = ""' + value.previousPaymentAmount + '"" class= ""form-control opma"" /> </td>'
                                    //+ '<input id=""PDemandId_' + key + '"" type=""hidden"" value=""' + value.demandId + '"" />'
                                    + '<input id=""PReceiptNo_' + key + '"" type=""hidden"" value=""' + value.rsl + '"" />'
                                    //+ '<input id=""PLedgerId_' + key + '"" type=""hidden"" value=""' + value.ledgerId + '"" />'
                                    + '<input id=""PPaymentLedgerId_' + key + '"" type=""hidden"" value=""' + value.paymentLedgerId + '"" />'
                                    + '<td><input id=""NewPaymentModeAmount' + key + '"" type=""number"" onkeyup=""return TotalPaymentModeAmount();""  value=""""  class=""form-control pma"" /></td>'
                                    + ");
            WriteLiteral(@"'<td><input id=""NewTotalPaymentModeAmount_' + key + '"" type=""number""  class=""form-control cs"" readonly value="""" /></td > '
                                    + '</tr>');

                            });

                        } else {
                            $('#DisplayPaymentModeDetails').show(1000);
                            $('#tbl_paymentmodedetails').append(
                                '<tr><td colspan=""6"" style=""color: red;"">No record found!</td></tr>');
                        }

                    },

                    error: function () {
                        alert('error');
                    }

                });


                }


    function SavePaymentAmount() {
        alert($('#HDNGrandTotalPayment').val());
        alert($('#HDNGrandTotalPaymentMode').val());
        if ($('#HDNGrandTotalPayment').val() != $('#HDNGrandTotalPaymentMode').val()) {
            swal('The Amount you enter is not equal!');
            return false;
        }
  ");
            WriteLiteral(@"      var a = document.getElementById(""UReceipt"").files[0].name;

        var myarray = [];
        var index = 0;

        $('#tblPaymentAmounts > tbody  > tr ').each(function () {
        var PaymentAmountModification = {};

            var DemandId = $('#DemandId_' + parseInt(index)).val();
            var LedgerId = $('#LedgerId_' + parseInt(index)).val();
            var PaymentLedgerId = $('#PaymentLedgerId_' + parseInt(index)).val();
            var PaymentAmount = $('#NewPaymentAmount' + parseInt(index)).val();
            var PreviousAmount = $('#OldAmount_' + parseInt(index)).val();
            var RSL = $('#ReceiptNo_' + parseInt(index)).val();

            PaymentAmountModification.DemandId = parseInt(DemandId);
            PaymentAmountModification.LedgerId = parseInt(LedgerId);
            PaymentAmountModification.PaymentLedgerId = parseInt(PaymentLedgerId);
            PaymentAmountModification.TotalPaymentAmount = parseFloat(PaymentAmount);
            PaymentAmountModifica");
            WriteLiteral(@"tion.PreviousPaymentAmount = parseFloat(PreviousAmount);
            PaymentAmountModification.RSL = parseInt(RSL);
            PaymentAmountModification.PaymentUpload = a;

                myarray.push(PaymentAmountModification);
            index = index + 1;
        });
        var json_data = JSON.stringify(myarray);
        console.log(json_data);
        $('#img').hide();

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 516 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
             Write(Url.Action("SavePayment", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: json_data,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                if (response > 0) {
                    swal('Payment Saved Successfully!');
                    $('#UReceipt').val('');
                    $('#NewPaymentAmount').val('');
                    DisplayReceiptDetails();
                    ViewReceipt();
                    $('#ReceiptEntry').hide(1000);

                }
                else {
                    swal('Saving Failed!');
                    $('#img').hide();
                    return false;
                }
            },
            failure: function (response) {
                $('#img').hide();
                swal(""Creation Failed"");
            },
            error: function (response) {
                $('#img').hide();
                swal(""Error while inserting"");
            }
        });
    }

    function SavePaymentModeA");
            WriteLiteral(@"mount() {
        alert($('#HDNGrandTotalPayment').val());
        alert($('#HDNGrandTotalPaymentMode').val());
        if ($('#HDNGrandTotalPayment').val() != $('#HDNGrandTotalPaymentMode').val()) {
            swal('The Amount you enter is not equal!');
            return false;
        }
        var myarray1 = [];
        var index = 0;
        var a = document.getElementById(""UReceipt"").files[0].name;

        $('#tblpaymentmodedetails > tbody  > tr ').each(function () {
            var PaymentModeAmountModification = {};
            var PaymentLedgerId = $('#PPaymentLedgerId_' + parseInt(index)).val();
            var OldPaymentModeAmount = $('#OldPaymentModeAmount_' + parseInt(index)).val();
            var PaymentModeAmount = $('#NewPaymentModeAmount' + parseInt(index)).val();
            var RSL = $('#PReceiptNo_' + parseInt(index)).val();
            PaymentModeAmountModification.PreviousPaymentModeAmount = parseFloat(OldPaymentModeAmount);
            PaymentModeAmountModification.");
            WriteLiteral(@"TotalPaymentModeAmount = parseFloat(PaymentModeAmount);
            PaymentModeAmountModification.PaymentLedgerId = parseInt(PaymentLedgerId);
            PaymentModeAmountModification.RSL = parseInt(RSL);

            PaymentModeAmountModification.PaymentUpload = a;

            myarray1.push(PaymentModeAmountModification);
            index = index + 1;
        });
        var json_data = JSON.stringify(myarray1);
        console.log(json_data);
        $('#img').hide();


        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 581 "D:\TT\Finalarms\ARMS\Areas\Payment\Views\PaymentAmountModification\PaymentAmountModification.cshtml"
             Write(Url.Action("SavePaymentModeAmount", "PaymentAmountModification"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: json_data,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                if (response > 0) {
                    swal('Payment Saved Successfully!');
                    DisplayReceiptDetails();
                    ViewReceipt();
                    $('#NewPaymentModeAmount').val('');
                    $('#UReceipt').val('');
                    $('#ReceiptEntry').hide(1000);

                }
                else {
                    swal('Saving Failed!');
                    $('#img').hide();
                    return false;
                }
            },
            failure: function (response) {
                $('#img').hide();
                swal(""Creation Failed"");
            },
            error: function (response) {
                $('#img').hide();
                swal(""Error while inserting"");
            }
        });
    }
    function TotalAmount() ");
            WriteLiteral(@"{

        $(""#tblPaymentAmounts tbody tr"").each(function () {
            //cons
            var cr = Number($(this).find('.cmr').val());
            var pvr = Number($(this).find('.prd').val());
            //var r = Number($(this).find('.cm').val());
                //$('#HDNGrandTotalPayment').val(r);

            if (cr == """") {
                $(this).find('.cm').val(pvr);
                findTotal();
            }

            else {
                $(this).find('.cm').val(cr);
                findTotal();
            }

            function findTotal() {

                var arr = document.getElementsByClassName('cm');
                var tot = 0;
                for (var i = 0; i < arr.length; i++) {
                    if (parseFloat(arr[i].value))
                        tot += parseFloat(arr[i].value);
                }
                $(""#HDNGrandTotalPayment"").val(tot.toFixed(2));
            }

        });
    }

    function TotalPaymentModeAmount() {

      ");
            WriteLiteral(@"  $(""#tblpaymentmodedetails tbody tr"").each(function () {
            //cons
            var PMA = Number($(this).find('.pma').val());
            var OPMA = Number($(this).find('.opma').val());

            //var r = Number($(this).find('.cm').val());
            //$('#HDNGrandTotalPayment').val(r);

            if (PMA == """") {
                $(this).find('.cs').val(OPMA);
                findPaymentModeTotal();
            }

            else {
                $(this).find('.cs').val(PMA);
                findPaymentModeTotal();
            }

            function findPaymentModeTotal() {

                var arr = document.getElementsByClassName('cs');
                var tot = 0;
                for (var i = 0; i < arr.length; i++) {
                    if (parseFloat(arr[i].value))
                        tot += parseFloat(arr[i].value);
                }
                $(""#HDNGrandTotalPaymentMode"").val(tot.toFixed(2));
            }

        });
    }

</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PaymentAmountModification> Html { get; private set; }
    }
}
#pragma warning restore 1591
