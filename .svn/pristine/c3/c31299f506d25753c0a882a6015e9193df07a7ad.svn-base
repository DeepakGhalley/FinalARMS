#pragma checksum "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "15a966a6a46ee77298dc05abaa71ec5b39efa8f7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Property_Views_LandDetails_Index), @"mvc.1.0.view", @"/Areas/Property/Views/LandDetails/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\APPS\TT\ARMS\ARMS\Areas\_ViewImports.cshtml"
using ARMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\APPS\TT\ARMS\ARMS\Areas\_ViewImports.cshtml"
using ARMS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"15a966a6a46ee77298dc05abaa71ec5b39efa8f7", @"/Areas/Property/Views/LandDetails/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b4a8197006c533ca3077e7e53fa27a725fee456", @"/Areas/_ViewImports.cshtml")]
    public class Areas_Property_Views_LandDetails_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CORE_BOL.LandDetailModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-outline-danger btn-lg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Add New"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("idiLandOwnershipTypeId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- Content Header (Page header) -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15a966a6a46ee77298dc05abaa71ec5b39efa8f76973", async() => {
                WriteLiteral(@"
    <div class=""content-header"">
        <div class=""container-fluid"">
            <div class=""row mb-2"">
                <div class=""col-sm-6"">
                    <h1 class=""m-0 text-dark""></h1>
                </div><!-- /.col -->
                <div class=""col-sm-6"">
                    <ol class=""breadcrumb float-sm-right"">
                        <li class=""breadcrumb-item"">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15a966a6a46ee77298dc05abaa71ec5b39efa8f77638", async() => {
                    WriteLiteral("Revenue Master");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"</li>
                        <li class=""breadcrumb-item active"">Land Details</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->


    <div class=""card card-info"">
");
#nullable restore
#line 28 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
         if (TempData["msg"] != null)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"            <div class=""alert alert-success alert-dismissible"">
                <button type=""button"" class=""close"" data-dismiss=""alert"" aria-hidden=""true"">&times;</button>
                <h5><i class=""icon fas fa-check""></i> Alert!</h5>
                <p>");
#nullable restore
#line 33 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
              Write(TempData["msg"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n            </div>\r\n");
#nullable restore
#line 35 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n        <div class=\"card-header\">\r\n            <h3 class=\"card-title\">Land Details</h3>\r\n        </div>\r\n        <!-- /.card-header -->\r\n        <div class=\"card-body\">\r\n            <p>\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15a966a6a46ee77298dc05abaa71ec5b39efa8f710351", async() => {
                    WriteLiteral("\r\n                    <b>\r\n                        <i class=\"fas fa-plus\"></i> Add New\r\n                    </b>\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
            </p>
            <div class=""row"">
                <div class=""input-group d-flex justify-content-center col-5"">
                    <label class=""col-sm-4 col-form-label"">Plot No: <span style=""font-weight: bold; color: red;""></span></label>
                    <input id=""plotNoSearch"" class=""form-control col-6"" />
                </div>

                <div class=""input-group-append col-2"">
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <input type=""button"" value=""Search"" class=""btn btn-primary"" onclick=""return displaydataDetails();"" />
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<!-- /.content-header -->

<div class=""card card-info"" style=""display:none;"" id=""landdetailtbl"">
    <div class=""card-header"">
        <h3 class=""card-title"">Land Details</h3>
    </div>
    <div class=""card-body"">
        <table id=""example1"" class=""table table-bordered table-striped"">
            <thead style=""background-color:mediumaquamarine"">

                <tr>
                    <th>#</th>
                    <th>Plot No.</th>
                    <th>Land Acreage</th>
                    <th>Land Value</th>
                    <th>Property Type</th>
                    <th>Plot Address</th>
                    <th>Location</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id=""tbl_body"">
            </tbody>
        </table>
    </div>
</div>


<div class=""card card-info"" id=""landdetail"" style=""display: none;"">
    <div class=""card-header"">
        <h3 class=""card-title"">Existing Land Ownership Details</h3>

    </");
            WriteLiteral(@"div>
    <div class=""card-body"">

        <div class=""form-group row"">
            <table class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">
                    <tr>
                        <th>#</th>
                        <th>TTIN</th>
");
            WriteLiteral("                        <th>Name</th>\r\n");
            WriteLiteral(@"                        <th>Land Ownership Type</th>
                        <th>Net Area/PLR</th>
                        <th>Thram No</th>
                        <th>Owner Percentage</th>
                        <th> </th>
                        <th> </th>
                        <th>Action</th>
                        
                    </tr>
                </thead>
                <tbody id=""landtbl"">
                </tbody>
            </table>
        </div>
    </div>

</div>

<div class=""card card-info"" id=""buildingOwnership"" style=""display: none;"">
    <div class=""card-header"">
        <h3 class=""card-title"">Existing Building Ownership Details</h3>
        <input type=""hidden"" id=""hdnLandOwnershipId"" />

    </div>
    <div class=""card-body"">

        <div class=""form-group row"">
            <table class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">
                    <tr>
                        <th>#</th>");
            WriteLiteral(@"
                        <th>Building No</th>
                        <th>Year of Construction</th>
                        <th>Story type</th>
                        <th>Buildup Area</th>
                        <th>No of Floors</th>
                        <th>Select</th>
                    </tr>
                </thead>
                <tbody id=""buildingtbl"">
                </tbody>
            </table>
        </div>
        <div class=""row"">
            <button class=""btn btn-primary"" onclick=""return displayOtherBuildings($('#hdnLandOwnershipId').val());"">Add Building Ownership</button>
            &nbsp;
            &nbsp;<button type=""button"" id=""btnCancelAddBuildingOwnership"" class=""btn btn-warning"">Cancel</button>
        </div>
    </div>
</div>

<div class=""card card-info"" id=""buildingDetail"" style=""display: none;"">
    <input type=""hidden"" id=""hdnBuildingDetailId"" />

    <div class=""card-header"">
        <h3 class=""card-title"">Building Details</h3>

    </div>
    ");
            WriteLiteral(@"<div class=""card-body"">

        <div class=""form-group row"">
            <table id=""tblUnMappedBuilding"" class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">
                    <tr>
                        <th>#</th>
                        <th>Select</th>
                        <th>Building No</th>
                        <th>Year of Construction</th>
                        <th>Story type</th>
                        <th>Buildup Area</th>
                        <th>No of Floors</th>
                    </tr>
                </thead>
                <tbody id=""buildingdtbl"">
                </tbody>
            </table>
        </div>
        <div class=""row"">

            <button class=""btn btn-primary "" id=""btnSaveBuilding"">Save</button>
            &nbsp;
            &nbsp;
            &nbsp;
            <button class=""btn btn-warning"" id=""btnCancelBuildingSave"">Cancel</button>
        </div>
    </div>

</div>

<d");
            WriteLiteral(@"iv class=""card card-info"" id=""dvdetails"" style=""display: none;"">
    <div class=""card-header"">
        <h3 class=""card-title"">Add Land Ownership Details for <label id=""plotno""></label></h3>
        <input type=""hidden"" id=""hdnLandDetailId"" />
        <input type=""hidden"" id=""hdnTaxPayerId"" />
    </div>
    <div class=""card-body"">

        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">CID </label>
            <div class=""col-sm-2"">
                <input class=""form-control"" maxlength=""11"" placeholder=""Search by CID"" id=""CIDinput"" />
            </div>
            <label class=""col-sm-1 col-form-label"">TTIN </label>
            <div class=""col-sm-2"">
                <input class=""form-control"" placeholder=""Search by TTIN"" id=""TTINinput"" />
            </div>

            <div class=""col-sm-2"">
                <button type=""button"" class=""btn btn-outline-success"" onclick=""return SearchTaxPayer();"">Search</button>

            </div>
        </div>
      ");
            WriteLiteral(@"  <hr />
        <div class=""form-group row"" id=""dvTaxpayerInfo"">
            <table id=""example1"" class=""table table-bordered table-striped"">
                <thead>

                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>CID</th>
                        <th>TTIN</th>

                    </tr>
                </thead>
                <tbody id=""mybody"">
                </tbody>
            </table>
        </div>

        <hr />
        <div id=""dvOwnershipEntry"" style=""display:none;"">


            <div class=""form-group row"">
                <label class=""col-sm-2 col-form-label"">Land Ownership Type <span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15a966a6a46ee77298dc05abaa71ec5b39efa8f720529", async() => {
                WriteLiteral("\r\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
#nullable restore
#line 244 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList (@ViewBag.LandOwnershipTypeId,"Value","Text"));

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n");
            WriteLiteral(@"
                <label class=""col-sm-2 col-form-label"">PLR <span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3"">
                    <input type=""number"" min=""0"" class=""form-control"" id=""plr"" placeholder=""Enter PLR"" />
                </div>

            </div>
            <div class=""form-group row"">
                <label class=""col-sm-2 col-form-label"">Thram No. <span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3"">
                    <input class=""form-control"" id=""idsThramNo"" placeholder=""Enter Thram No."" />
                </div>
                <label class=""col-sm-2 col-form-label"">Ownership Percentage <span style=""font-weight: bold; color: red;"">*</span></label>
                <div class=""col-sm-3"">
                    <input class=""form-control"" id=""op"" placeholder=""Enter Ownership Percentage"" />
                </div>
            </div>
");
            WriteLiteral(@"            <div class=""row"">
                <label class=""col-sm-2 col-form-label""></label>
                <div class=""col-sm-10"">
                    <button type=""button"" class=""btn btn-primary"" id=""SaveLandOwnershipDetail"">Save</button>
                    <button type=""button"" id=""btnCancelSaveLandOwership"" class=""btn btn-warning"">Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15a966a6a46ee77298dc05abaa71ec5b39efa8f723738", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
        $(""#btnCancel"").click(function () {
            $(""#dvOwnershipEntry"").hide(1000); $(""#dvTaxpayerInfo"").hide(1000);
            $(""#CIDinput"").focus();
        });
    $(""#btnCancelBuildingSave"").click(function () {
        $(""#buildingOwnership"").hide(1000);
        $(""#buildingDetail"").hide(1000);
        $(""#dvdetails"").show(1000);
        $(""#CIDinput"").focus();
    });
    $(""#btnCancelSaveLandOwership"").click(function () {
        $(""#buildingOwnership"").hide(1000);
        $(""#buildingDetail"").hide(1000);
        $(""#dvTaxpayerInfo"").hide(1000);
        $(""#dvOwnershipEntry"").hide(1000);
        $(""#dvdetails"").show(1000);
        $(""#CIDinput"").focus();
    }); $(""#btnCancelAddBuildingOwnership"").click(function () {
        $(""#buildingOwnership"").hide(1000);
        $(""#buildingDetail"").hide(1000);
        $(""#dvTaxpayerInfo"").hide(1000);
        $(""#dvOwnershipEntry"").hide(1000);
        $(""#dvdetails"").show(1000);
        $(""#CIDinput"").focus();
    });
");
            WriteLiteral(@"    $(function () {
        $(""#example1"").DataTable({
            ""responsive"": true,
            ""autoWidth"": false,
        });
        $('#example2').DataTable({
            ""paging"": true,
            ""lengthChange"": false,
            ""searching"": false,
            ""ordering"": true,
            ""info"": true,
            ""autoWidth"": false,
            ""responsive"": true,
        });
    });

     function displaydataDetails() {

         var plotno = $('#plotNoSearch').val();

         if (plotno == plotno) {
                $.ajax({
                    type: ""GET"",
                    url: '");
#nullable restore
#line 339 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
                     Write(Url.Action("Getdata", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        plotno: plotno
                    },
                    success: function (data) {
                        $('#tbl_body').empty();
                        if (data.length > 0) {

                            $.each(data, function (key, value) {
                                $('#landdetailtbl').show(1000);
                                $('#tbl_body').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.plotNo + '</td>'
                                    + '<td>' + value.landAcerage + '</td>'
                                    + '<td>' + value.landValue + '</td>'
                                    + '<td>' + value.propertyType + '</td>'
                                    + '<td>' + value.plotAddress + '</td>'
                                    + '<td>' + value.location + '</td>'
                                  ");
            WriteLiteral(@"  + '<td>'
                                    + '<a onclick=""return edit(' + value.landDetailId + ');"" title=""EDIT""><i class=""fas fa-edit""></i></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a onclick=""return displayLandOwnershipType(' + value.landDetailId + ');""><i class=""fas fa-plus-circle""></i> </a>&nbsp;&nbsp;|&nbsp;&nbsp;<a onclick=""return details(' + value.landDetailId + ');"" title=""View""><i class=""fas fa-eye""></i> </a>'
                                    + '</td>'
                                    + '</tr>');
                            });
                       } else {
                            $('#tbl_body').append(
                                '<tr><td colspan=""4"" style=""color: red;"">No record found!</td></tr>');
                            swal({
                                title: 'Please Enter valid Value!',
                                type: 'error',
                                confirmButtonText: 'OK'
                            });
                        }

                  ");
            WriteLiteral(@"  },

                    error: function () {
                        alert('error');
                    }

                });
            }
            else {
                swal('Please Enter Plot No');
            }

    }

    function edit(id) {
        //alert(id);
        window.location.href = ""LandDetails/Edit?id="" + id;
    }

    function details(id) {
        //alert(id);
        window.location.href = ""LandDetails/Details?id="" + id;
    }

     //Display Tax Prayer Profile
        function SearchTaxPayer() {
            if ($('#CIDinput').val() == """" && $('#TTINinput').val() == """") {
                swal(""Please fill the fields"", """", ""error"");
                $('#CIDinput').focus();
                return false;
            }

        $('#CIDinput').insertAfter(function () {
            var Cid = $('#CIDinput').val();
            var Ttin = $('#TTINinput').val();
            if (Cid == Cid || Ttin == Ttin) {
                //$('#dvTaxpayerInfo').show(1000)");
            WriteLiteral(";\r\n\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    url: \'");
#nullable restore
#line 413 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
                     Write(Url.Action("GetTaxPayerProfile", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        cid: Cid,
                        ttin: Ttin
                    },
                    success: function (data) {
                        $('#mybody').empty();

                        if (data.length > 0) {
                            $.each(data, function (key, value) {
                                $('#dvTaxpayerInfo').show(1000);
                                $('#mybody').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.firstName + "" "" + value.middleName + "" "" + value.lastName + '</td>'
                                    + '<td>' + value.cid + '</td>'
                                    + '<td>' + value.ttin + '</td>'
                                    // + '<td><b><a style=""cursor: pointer; color: forestgreen;"" title=""Edit details"" onclick=""return displayLandDetail(' + value.taxPayerId + ');"">Select</a></b>");
            WriteLiteral(@"</td>'
                                    + '</tr>');
                                //alert(value.taxPayerId);

                            });
                            $('#hdnTaxPayerId').val(data[0].taxPayerId);
                            $('#dvTaxpayerInfo').show(1000);
                            $('#dvOwnershipEntry').show(1000);
                        }
                        else {
                            swal(""No taxpayer Information found.!"", """", ""warning"");
                            $('#dvTaxpayerInfo').hide(1000);
                            $('#dvOwnershipEntry').hide(1000);
                        }
                    },
                    error: function () {
                        alert('error');
                    }

                });
            }
            else {
               //('#dvTaxpayerInfo').show(1000);
                $('#mybody').append(
                    '<tr><td colspan=""4"" style=""color: red;"">No record found!</td></tr>');

     ");
            WriteLiteral(@"       }
        });
    }


    //Saving LandOwnershipDetails
    function displayLandOwnershipType(LandDetailId) {

        //$('#dvdetails').toggle(1000);
        //$('html,body').animate({
        //    scrollTop: $(""#dvdetails"").offset().top
        //}, 'slow');
        $('#dvdetails').show(1000);
        $('#landdetail').hide(1000);
        $('#buildingOwnership').hide(1000);
        $('html,body').animate({
            scrollTop: $(""#dvdetails"").offset().top
        }, 'slow');



        //$('#tblOwnershipInfo').hide(1000);

        $('#dvTaxpayerInfo').hide(1000);
        $('#hdnLandDetailId').val(LandDetailId);
        $('#dvOwnershipEntry').hide(1000);


        //$('landid').html(LandOwnershipId);
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 487 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("GetLandOwnershipDetail", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                id: parseInt(LandDetailId)
            },
            success: function (data) {

                console.log(data);

                $('#landtbl').empty();
                //Changed from == 0 to >0

                if (data.length > 0) {
                    $('#plotno').html(data[0].plotNo);
                    var res = null;

                    $.each(data, function (key, value) {
                        $('#landdetail').show(1000);
                        res = (value.landOwnershipTypeId == 1) ? '<a style=""cursor: pointer; color: forestgreen;"" onclick=""return DisplayBuildingOwnershipDetail(' + value.landOwnershipId +');"">Manage Building Ownership</a>' : 'No Building Ownership!';

                        $('#landtbl').append(
                            '<tr>'
                            + '<td>' + (key + 1) + '</td>'
                            + '<td>' + value.ttin + '</td>'
                            //+ '<td>' + value.cid + '</td>'
      ");
            WriteLiteral(@"                      + '<td>' + value.name + '</td>'
                            //+ '<td>' + value.plotNo + '</td>'
                            + '<td>' + value.landOwnershipType + '</td>'
                            + '<td>' + value.netArea + '</td>'
                            + '<td>' + value.thramNo + '</td>'
                            + '<td>' + value.ownershipPercentage + '</td>'
                            + '<td><a style=""cursor: pointer; color: forestgreen;"" title=""delete"" onclick=""return UpdateLandOwnership(' + value.landOwnershipId + ');"">Update LandOwnership</a></td>'
                            + '<td><a style=""cursor: pointer; color: forestgreen;"" title=""delete"" onclick=""return deleteLandOwnership(' + value.landOwnershipId + ');"">Deactivate Ownership</a></td>'
                            + '<td>' + res + '</td>'

                           
                            // + '<td><b><a style=""cursor: pointer; color: forestgreen;"" title=""Edit details"" onclick=""return displayData(' + v");
            WriteLiteral(@"alue.costofProcurement + ',' + value.usefulLife + ');"">EDIT</a></b></td>'
                            //+ '<td data-toggle=""modal"" data-target=""#exampleModalCenter"" ><a onclick=""return d(' + value.dateofProcurement + ');""><i class=""fas fa-edit""></i></a></td>'
                            //+ ',' + value.dateofCommissioning + ',' + value.usefulLife + ',' + value.procurementOrderRefNo + ',' + value.procurementOrderDate + ',' + value.costofProcurement
                            + '</tr>');


                    });


                }
                if (data.length == 0) {
                    $('#landdetail').show(1000);

                    $('#landtbl').append(
                        '<tr><td colspan=""11"" style=""color: red;"">No record found!</td></tr>');
                }

            }

        });

    }


    function deleteLandOwnership(LandOwnershipId) {
       
        swal(confirm(""Are you sure you want to deactivate?"", ""Yes"", ""No"", true))

        $.ajax({
            typ");
            WriteLiteral("e: \"GET\",\r\n            url: \'");
#nullable restore
#line 552 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("RemoveOwnership", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                LandOwnershipId: parseInt(LandOwnershipId)
            },
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (response) {
                displayLandOwnershipType($(""#hdnLandDetailId"").val());

                if (response > 0) {
                    $('#img').hide();
                    swal(""Successfully removed the Ownership from the selected tax payer."");
                } else {

                    swal(""This land ownership can not be deleted as it is used in another transaction!!"");
                    $('#img').hide();
                }
               
            },
            error: function () {
                swal(""This land ownership can not be deleted as it is used in another transaction!!"");
                $('#img').hide();
            }
        });
    }

    function DisplayBuildingOwnershipDetail(landownershipId) {
        $('#hdnLandOwnershipId').val(lando");
            WriteLiteral(@"wnershipId);
            $('#dvdetails').hide(1000);
        $('#buildingOwnership').show(1000);
        $(""#buildingDetail"").hide(1000);
            $('html,body').animate({
                scrollTop: $(""#buildingOwnership"").offset().top
            }, 'slow');

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 589 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("GetBuildingOwnershipDetail", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                id: parseInt(landownershipId)
            },
            success: function (data) {
              //  $('#hdnBuildingDetailId').val(data[0].buildingDetailId);
                console.log(data);
                $('#buildingtbl').empty();

                //Changed from == 0 to >0

                if (data.length > 0) {
                    //$('#plotno').html(data[0].plotNo);
                    var res = null
                    $.each(data, function (key, value) {
                        $('#landdetail').show(1000);
                        //res = (value.landOwnershipTypeId == 1) ? '<b><a style=""cursor: pointer; color: forestgreen;"" onclick=""return displayBuilding('+ LandOwnershipId +');"">Manage Building Ownership</a></b>' : '<b><a style=""cursor: pointer; color: forestgreen;"" title=""Generate Demand""></a></b>';

                        $('#buildingtbl').append(
                            '<tr>'
                            + '<td>' + (key + 1) + '</td>");
            WriteLiteral(@"'
                            + '<td>' + value.buildingNo + '</td>'
                            + '<td>' + value.yearOfConstruction + '</td>'
                            + '<td>' + value.storyType + '</td>'
                            + '<td>' + value.buildupArea + '</td>'
                            + '<td>' + value.numberOfFloors + '</td>'
                            + '<td><b><a style=""cursor: pointer; color: forestgreen;"" title=""delete"" onclick=""return deleteBuildingOwnership(' + value.buildingOwnershipId +');"">Remove</a></b></td>'

                            // + '<td><b><a style=""cursor: pointer; color: forestgreen;"" title=""Edit details"" onclick=""return displayData(' + value.costofProcurement + ',' + value.usefulLife + ');"">EDIT</a></b></td>'
                            //+ '<td data-toggle=""modal"" data-target=""#exampleModalCenter"" ><a onclick=""return d(' + value.dateofProcurement + ');""><i class=""fas fa-edit""></i></a></td>'
                            //+ ',' + value.dateofCommissioning + ',");
            WriteLiteral(@"' + value.usefulLife + ',' + value.procurementOrderRefNo + ',' + value.procurementOrderDate + ',' + value.costofProcurement
                            + '</tr>');


                    });


                }
                if (data.length == 0) {
                    $('#landdetail').show(1000);

                    $('#buildingtbl').append(
                        '<tr><td colspan=""6"" style=""color: red;"">No record found!</td></tr>');
                }

            }

        });

    }

    function deleteBuildingOwnership(id) {
        //alert(id);
        swal(confirm(""Are you sure you want to delete?"", ""Yes"", ""No"", true))
    /* .then((value) => {*/
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 646 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("Delete", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                id: parseInt(id)
            },
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (response) {
                $('#img').hide();
                swal(""Successfully removed the building ownership from the selected tax payer."");

                DisplayBuildingOwnershipDetail($('#hdnLandOwnershipId').val());
            },
            error: function () {
                alert(""error on delete."");
                $('#img').hide();
            }
        });
    }

    function displayOtherBuildings(landOwnId) {
       // alert(landOwnId);

        $('#buildingDetail').show(1000);
            $('html,body').animate({
                scrollTop: $(""#buildingDetail"").offset().top
            }, 'slow');


             $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 676 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("DisplayOtherBuildingDetail", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                landOwnId: parseInt(landOwnId)
            },
            success: function (data) {

                console.log(data);
                $('#buildingdtbl').empty();

                //Changed from == 0 to >0

                if (data.length > 0) {
                    //$('#plotno').html(data[0].plotNo);
                    var res = null

                    $.each(data, function (key, value) {
                        $('#landdetail').show(1000);
                        //res = (value.landOwnershipTypeId == 1) ? '<b><a style=""cursor: pointer; color: forestgreen;"" onclick=""return displayBuilding('+ LandOwnershipId +');"">Manage Building Ownership</a></b>' : '<b><a style=""cursor: pointer; color: forestgreen;"" title=""Generate Demand""></a></b>';

                        $('#buildingdtbl').append(
                            '<tr>'
                            + '<td>' + (key + 1) + '</td>'
                            + '<td><input id=""id_' + key + '"" type");
            WriteLiteral(@"=""hidden"" value=""' + value.buildingDetailId + '"" />'
                            + '<input id=""chk_' + key + '"" type=""checkbox"" value=""' + value.buildingDetailId + '"" class""=checkbox"" /> <label for=chk_' + key + '> Select </label>'

                            + '<td>' + value.buildingNo + '</td>'
                            + '<td>' + value.yearOfConstruction + '</td>'
                            + '<td>' + value.storyType + '</td>'
                            + '<td>' + value.buildupArea + '</td>'
                            + '<td>' + value.numberOfFloors + '</td>'

                            // + '<td><b><a style=""cursor: pointer; color: forestgreen;"" title=""Edit details"" onclick=""return displayData(' + value.costofProcurement + ',' + value.usefulLife + ');"">EDIT</a></b></td>'
                            //+ '<td data-toggle=""modal"" data-target=""#exampleModalCenter"" ><a onclick=""return d(' + value.dateofProcurement + ');""><i class=""fas fa-edit""></i></a></td>'
                            //+ ',");
            WriteLiteral(@"' + value.dateofCommissioning + ',' + value.usefulLife + ',' + value.procurementOrderRefNo + ',' + value.procurementOrderDate + ',' + value.costofProcurement
                            + '</tr>');


                    });


                }
                if (data.length == 0) {
                    $('#landdetail').show(1000);

                    $('#buildingdtbl').append(
                        '<tr><td colspan=""6"" style=""color: red;"">No record found!</td></tr>');
                }

            }

        });

    }

    $(""#SaveLandOwnershipDetail"").click(function () {
        if ($(""#idiLandOwnershipTypeId"").val() == ""0"") {
            swal(""Please select land ownership type.!"")
            $(""#idiLandOwnershipTypeId"").focus();
            return false;
        }
        if ($(""#op"").val() == """") {
            swal(""Please enter ownership percentage.!"")
            $(""#op"").focus();
            return false;
        }
        if ($(""#idsThramNo"").val() == """") {
      ");
            WriteLiteral("      swal(\"Please enter ownership thram no.!\")\r\n            $(\"#idsThramNo\").focus();\r\n            return false;\r\n        }\r\n\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 749 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
             Write(Url.Action("CheckDuplicateLandOwnership", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
              LandDetailId : parseInt($(""#hdnLandDetailId"").val()),
              TaxPayerId   :   parseInt($(""#hdnTaxPayerId"").val())
            },
            success: function (data) {
                console.log(data);
                //$('#buildingdtbl').empty();
                if (data.length > 0) {
                    swal(""The plot is already added to the owner. Please verify."");
                    return false;
                }
                else {

                        var myarray = [];
                        var LandOwnershipDetailsVM = {};
                        LandOwnershipDetailsVM.LandOwnershipTypeId = parseInt($(""#idiLandOwnershipTypeId"").val());
                        LandOwnershipDetailsVM.ThramNo = $(""#idsThramNo"").val();
                        LandOwnershipDetailsVM.OwnershipPercentage = parseFloat($(""#op"").val());
                        LandOwnershipDetailsVM.PLr = parseFloat($(""#plr"").val());
                        LandOwnershipD");
            WriteLiteral(@"etailsVM.LandDetailId = parseInt($(""#hdnLandDetailId"").val());
                        LandOwnershipDetailsVM.TaxPayerId = parseInt($(""#hdnTaxPayerId"").val());

                        myarray.push(LandOwnershipDetailsVM);

                        var json_data = JSON.stringify(myarray);
                        console.log(json_data);

                        $('#img').show();

                        $.ajax({
                            type: ""POST"",
                            url: '");
#nullable restore
#line 781 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
                             Write(Url.Action("CreateLandOwnershipDetail", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                            data: json_data,
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (response) {
                                $('#landdetail').show(1000);
                                $('#dvTaxpayerInfo').hide(1000);
                                $('#dvOwnershipEntry').hide(1000);
                                $('#dvdetails').hide(1000);
                                displayLandOwnershipType($(""#hdnLandDetailId"").val());
                                $('#img').hide();
                                swal(response);
                            },
                            failure: function (response) {
                                $('#img').hide();
                                swal(""Creation Failed"");
                            },
                            error: function (response) {
                                $('#img').hide();
   ");
            WriteLiteral(@"                             swal(""Error while inserting"");
                            }

                        });

                }
            }
        });

    });

    $('#btnSaveBuilding').on('click', function () {

        var r = confirm(""Are you sure you want to save.?"");
        if (r == true) {

        } else {
            return false;
        }


        //***********************ids start************************
        var selected = new Array();
        var ids;

        //Reference the CheckBoxes and insert the checked CheckBox value in Array.
         $(""#tblUnMappedBuilding input[type=checkbox]:checked"").each(function () {
            selected.push(this.value);
         });

        //Display the selected CheckBox values.
        if (selected.length > 0) {
            ids = selected.join("","");
         }
         //alert(ids);
       //  return false;
        //**********************ids end****************
        $('#img').show();

              ");
            WriteLiteral(@"          //console.log(JSON.stringify(PMarray));
                       //************************PAYMENT MODE LOOP START**********************
                        var myarray = [];
                        //for (i = 0; i < $(""#exampleDemandDetail TBODY TR"").length - 1; i++) {

                            var ledgobj = {};
                        ledgobj.Ids = ids;
                        ledgobj.landownershipId = parseInt($('#hdnLandOwnershipId').val());
                         myarray.push(ledgobj);
                        console.log(JSON.stringify(myarray));
                       //************************DEMAND LOOP START**********************

                        $.ajax({
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            url: '");
#nullable restore
#line 854 "D:\APPS\TT\ARMS\ARMS\Areas\Property\Views\LandDetails\Index.cshtml"
                             Write(Url.Action("CreateBuildingOwnership", "LandDetails"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                            type: ""POST"",
                            data: JSON.stringify(myarray),
                            success: function (r) {
                                    $('#img').hide();

                                if (r > 0) {
                                   // MakePayment(r,20);
                                    swal(""Success"", ""Data successfully mapped"", ""success"");
                                    $('#img').hide();

                                    $('#buildingDetail').hide(1000);
                                    DisplayBuildingOwnershipDetail($('#hdnLandOwnershipId').val());
                                }
                                else {
                                    swal(""Error saving details."");
                                }
                            },
                             failure: function (r) {
                                $('#img').hide();
                                swal(""Creation Failed"");
         ");
            WriteLiteral(@"                   },
                            error: function (r) {
                                $('#img').hide();
                                swal(""Error while inserting"");
                            }
                        });
          //************************DEMAND LOOP END**********************

    });

    function UpdateLandOwnership(id) {

        window.location.href = ""LandDetails/UpdateLandOwnership?id="" + id;
    }

    




</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CORE_BOL.LandDetailModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
