/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[trnConstructionApprovalApplicationFeeDetail].[amount] on table [dbo].[trnConstructionApprovalApplicationFeeDetail] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[trnConstructionApprovalApplicationFeeDetail])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[trnConstructionApprovalApplicationFeeDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_trnConstructionApprovalApplicationFeeDetail] (
    [constructionApprovalApplicationFeeId] INT             IDENTITY (1, 1) NOT NULL,
    [plotNo]                               VARCHAR (50)    NOT NULL,
    [thramNo]                              VARCHAR (50)    NOT NULL,
    [ttin]                                 VARCHAR (50)    NOT NULL,
    [amount]                               DECIMAL (18, 2) NOT NULL,
    [g2cApplicationNo]                     VARCHAR (150)   NOT NULL,
    [createdOn]                            DATE            NOT NULL,
    [createdBy]                            INT             NOT NULL,
    [modifiedOn]                           DATE            NULL,
    [modifiedBy]                           INT             NULL,
    PRIMARY KEY CLUSTERED ([constructionApprovalApplicationFeeId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[trnConstructionApprovalApplicationFeeDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_trnConstructionApprovalApplicationFeeDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_trnConstructionApprovalApplicationFeeDetail] ([constructionApprovalApplicationFeeId], [plotNo], [thramNo], [ttin], [g2cApplicationNo], [createdOn], [createdBy], [modifiedOn], [modifiedBy])
        SELECT   [constructionApprovalApplicationFeeId],
                 [plotNo],
                 [thramNo],
                 [ttin],
                 [g2cApplicationNo],
                 [createdOn],
                 [createdBy],
                 [modifiedOn],
                 [modifiedBy]
        FROM     [dbo].[trnConstructionApprovalApplicationFeeDetail]
        ORDER BY [constructionApprovalApplicationFeeId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_trnConstructionApprovalApplicationFeeDetail] OFF;
    END

DROP TABLE [dbo].[trnConstructionApprovalApplicationFeeDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_trnConstructionApprovalApplicationFeeDetail]', N'trnConstructionApprovalApplicationFeeDetail';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnLandTransferDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[trnLandTransferDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_trnLandTransferDetail_ToTable_1] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Procedure [dbo].[rptDefaulterPropertyList]...';


GO

--exec [dbo].[rptDefaulterPropertyList] '21'
create PROCEDURE [dbo].[rptDefaulterPropertyList]
@CalendarYearId int
AS
BEGIN
	SET NOCOUNT ON;	
	SELECT ROW_NUMBER() over(order by(select 1)) as Sl, tpp.firstName +''+ tpp.middleName +''+ tpp.lastName as TaxPayerName, tpp.cid as CID,
	tpp.ttin as TTIN, sum(d.totalAmount) as TotalAmount
	from tblDemand d 
	inner join mstTaxPayerProfile tpp on d.taxPayerId = tpp.taxPayerId
	inner join mstCalendarYear cy on d.calendarYearId = cy.calendarYearId
	where d.calendarYearId >= @CalendarYearId and d.isPaymentMade = 0
	group by  tpp.firstName +''+ tpp.middleName +''+ tpp.lastName, tpp.cid, tpp.ttin, d.taxPayerId
end
GO
PRINT N'Creating Procedure [dbo].[rptIndividualReceiptWiseCollection]...';


GO


-- exec [dbo].[rptIndividualReceiptWiseCollection] '20210423','20210424'

create PROCEDURE [dbo].[rptIndividualReceiptWiseCollection]
@FromDate  int ,@ToDate  int
AS
BEGIN
SET NOCOUNT ON;
-- CASH 1

 SELECT  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl, * from (
(
select
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate,
convert(varchar ,pl.createdOn,103) as PaymentDate ,sum(pl.amount) as Cash,0 as Cheque
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=1 and convert(varchar ,pl.createdOn,112)>=@FromDate and convert(varchar ,pl.createdOn,112)<=@ToDate
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)
UNION all
-- CHEQUE 2
(
select
--convert(varchar ,@FromDate,103) as FromDate,convert(varchar ,@ToDate,103) as ToDate,
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate,
convert(varchar ,pl.createdOn,103) as PaymentDate ,0 as Cash,sum(pl.amount) as Cheque from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=2 and convert(varchar ,pl.createdOn,112)>=@FromDate and convert(varchar ,pl.createdOn,112)<=@ToDate
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)) gg
order by ReceiptNo
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[trnLandTransferDetail] WITH CHECK CHECK CONSTRAINT [FK_trnLandTransferDetail_ToTable_1];


GO
PRINT N'Update complete.';


GO
