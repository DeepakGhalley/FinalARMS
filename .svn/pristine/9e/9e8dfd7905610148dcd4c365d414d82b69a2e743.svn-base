#pragma checksum "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a7aad335c7e97912be0b1376e927cf8241c3761d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Water_Views_WaterMeterReadings_BIllGenerate), @"mvc.1.0.view", @"/Areas/Water/Views/WaterMeterReadings/BIllGenerate.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\APPS\TT\ARMS\ARMS\Areas\_ViewImports.cshtml"
using ARMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\APPS\TT\ARMS\ARMS\Areas\_ViewImports.cshtml"
using ARMS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7aad335c7e97912be0b1376e927cf8241c3761d", @"/Areas/Water/Views/WaterMeterReadings/BIllGenerate.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b4a8197006c533ca3077e7e53fa27a725fee456", @"/Areas/_ViewImports.cshtml")]
    public class Areas_Water_Views_WaterMeterReadings_BIllGenerate : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CORE_BOL.WaterMeterReadingModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h1 class=""m-0 text-dark""></h1>
            </div>
            <div class=""col-sm-6"">
                <ol class=""breadcrumb float-sm-right"">
                    <li class=""breadcrumb-item""><a href=""BillGenerate"">Water Bill Generate</a></li>
                    <li class=""breadcrumb-item active"">Water Transaction</li>
                </ol>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7aad335c7e97912be0b1376e927cf8241c3761d5287", async() => {
                WriteLiteral("\r\n    <div class=\"card card-info\">\r\n");
#nullable restore
#line 25 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
         if (TempData["msg"] != null)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"            <div class=""alert alert-success alert-dismissible"">
                <button type=""button"" class=""close"" data-dismiss=""alert"" aria-hidden=""true"">&times;</button>
                <h5><i class=""icon fas fa-check""></i> Alert!</h5>
                <p>");
#nullable restore
#line 30 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
              Write(TempData["msg"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n            </div>\r\n");
#nullable restore
#line 32 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"        <div class=""card-header"">
            <h3 class=""card-title"">Search Details</h3>
        </div>
        <div class=""card-body"">
            <div class=""row "">
                <div class=""input-group col-4"">
                    <label class=""col-sm-6 col-form-label"">Consumer No</label>
                    <input class=""form-control col-sm-6"" id=""id_consumerno"" />
                </div>
                <div class=""input-group col-4"">
                    <label class=""col-sm-6 col-form-label"">Meter No</label>
                    <input class=""form-control col-sm-6"" id=""id_meterno"" />
                </div>
                <div class=""input-group-append col-4"">
                    <input type=""button"" value=""search"" class=""btn btn-primary"" onclick=""return displayDetails();"" />
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div id=""tblBillGenerate"" style=""display:none;"">
    <div class=""card card-info"">
        <div class=""card-header"">
            <h3 class=""card-title"">Water Connection Details</h3>
        </div>
        <div class=""form-group row card-body"">
            <table class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">
                    <tr>
                        <th>#</th>
                        <th>Meter No</th>
                        <th>Consumer No</th>
                        <th>Billing Address</th>
                        <th>Water Connection Type</th>
                        <th>Meter Type</th>
                        <th>Line Type</th>
                        <th>Standard Consumption</th>
                        <th>Sewerage</th>
                        <th>Meter Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id=""myBody"">
                </");
            WriteLiteral(@"tbody>
            </table>
        </div>
    </div>
</div>

<div id=""tblReadingDetails"" style=""display:none;"">
    <div class=""card card-info"">
        <div class=""card-header"">
            <h3 class=""card-title"">Water Meter Reading Details</h3>
        </div>
        <div class=""form-group row card-body"">
            <table class=""table table-bordered table-striped"">
                <thead style=""background-color:mediumaquamarine"">
                    <tr>
                        <th>#</th>
                        <th>Reading Date</th>
                        <th>Curr. Reading</th>
                        <th>Prev. Reading</th>
                        <th>No of units</th>
                        <th>Standard Consumption</th>
                        <th>Connection Type</th>
                        <th>Meter Type</th>
                        <th>Line Type</th>
                        <th>Sewerage</th>
                        <th>Action</th>
                    </tr>
               ");
            WriteLiteral(@" </thead>
                <tbody id=""tbl_Body"">
                </tbody>
            </table>
        </div>
        
    </div>
</div>

<div class=""card card-info"" id=""dvReadingInfo"" style=""display: none;"">
    <div class=""card-header"">
        <h3 class=""card-title"">Meter Reading Details</h3>
    </div>
    <div class=""card-body"">
        <input type=""hidden"" id=""WaterMeterReadingId""");
            BeginWriteAttribute("value", " value=\"", 4470, "\"", 4478, 0);
            EndWriteAttribute();
            WriteLiteral(@" />
        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">Consumer No:</label>
            <div class=""col-sm-2"">
                <lable id=""consumerNo"" class=""col-form-label font-weight-normal""></lable>
            </div>
            <label class=""col-sm-2 col-form-label"">Meter No:</label>
            <div class=""col-sm-2"">
                <label id=""MeterNo"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Connection Type:</label>
            <div class=""col-sm-2"">
                <label id=""WaterConnection"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>

        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">Water Meter Type:</label>
            <div class=""col-sm-2"">
                <label id=""MeterType"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col");
            WriteLiteral(@"-form-label"">Water Line Type:</label>
            <div class=""col-sm-2"">
                <label id=""LineType"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Connection Satus:</label>
            <div class=""col-sm-2"">
                <label id=""WaterConnectionStatus"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>

        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">Zone:</label>
            <div class=""col-sm-2"">
                <label id=""Zone"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Zone Reader:</label>
            <div class=""col-sm-2"">
                <label id=""ZoneReader"" class=""col-form-label font-weight-normal""></label>
            </div>
");
            WriteLiteral(@"
            <label class=""col-sm-2 col-form-label"">Billing Address:</label>
            <div class=""col-sm-2"">
                <label id=""BAddress"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>

        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">Previous Reading:</label>
            <div class=""col-sm-2"">
                <label id=""PReading"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Previous Reading Date:</label>
            <div class=""col-sm-2"">
                <label id=""PRDate"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Current Reading:</label>
            <div class=""col-sm-2"">
                <label id=""CReading"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>

        <div class=""form-group row"">
            <labe");
            WriteLiteral(@"l class=""col-sm-2 col-form-label"">Current Reading Date:</label>
            <div class=""col-sm-2"">
                <label id=""CRDate"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">No of Unit:</label>
            <div class=""col-sm-2"">
                <label id=""NoOfUnits"" class=""col-form-label font-weight-normal""></label>
            </div>
            <label class=""col-sm-2 col-form-label"">Consumption:</label>
            <div class=""col-sm-2"">
                <label id=""Consumption"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>

        <div class=""form-group row"">
            <label class=""col-sm-2 col-form-label"">Sewerage:</label>
            <div class=""col-sm-2"">
                <label id=""Sewerage"" class=""col-form-label font-weight-normal""></label>
            </div>

            <label class=""col-sm-2 col-form-label"">Mobile No:</label>
            <div class=""col-sm-2""");
            WriteLiteral(@">
                <label id=""MobileNo"" class=""col-form-label font-weight-normal""></label>
            </div>
        </div>
        <div class=""form-group row"">
            <label class=""col-sm-3 col-form-label""></label>
            <div class=""col-sm-9"">
                <button type=""button"" class=""btn btn-primary"" id=""Generate"">Generate</button>
                <button type=""button"" id=""btnCancel"" class=""btn btn-warning"" onclick=""cancel();"">Cancel</button>
            </div>
        </div>
    </div>
</div>
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7aad335c7e97912be0b1376e927cf8241c3761d16252", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

        <script>
            function displayReadingInfo(WaterMeterReadingId) {
                $('#WaterMeterReadingId').val(WaterMeterReadingId);
                $('#dvReadingInfo').show(1000);
                $('html,body').animate({
                    scrollTop: $(""#dvReadingInfo"").offset().top
                }, 'slow');



            $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 233 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
             Write(Url.Action("getReadingInfo", "WaterMeterReadings"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                id: WaterMeterReadingId
            },
            dataType: 'JSON',
            contentType: 'application/json, charset=utf-8',                
                success: function (data) {
                if (data.length > 0) {
                    var WaterConnectionName = data[0].waterConnectionName;
                    var WaterLineTypeName = data[0].waterLineTypeName;
                    var WaterConnectionStatusName = data[0].waterConnectionStatusName;
                    var WaterMeterTypeName = data[0].waterMeterTypeName;
                    var ZoneName = data[0].zoneName;
                    var ZoneReader = data[0].zoneReader;
                    var PreviousReading = data[0].previousReading;
                    var PreviousReadingDate = data[0].previousReadingDate;
                    var ConsumerNo = data[0].consumerNo;
                    var WaterMeterNo = data[0].waterMeterNo;
                    var NoOfUnit = data[0].noOfUnit;
          ");
            WriteLiteral(@"          var ReadBy = data[0].readBy;
                    var BillingAddress = data[0].billingAddress;
                    var Consumption = data[0].consumption;
                    var Reading = data[0].reading;
                    var ReadingDate = data[0].readingDate;
                    var Sewerage = data[0].sewerage;
                    var MobileNo = data[0].primaryMobileNo;


                    //Displaying Date
                    const d = new Date(PreviousReadingDate);
                    const PRDate = d.getFullYear() + '-' + (""0"" + (d.getMonth() + 1)).slice(-2) + '-' + (""0"" + d.getDate()).slice(-2)

                    const e = new Date(ReadingDate);
                    const CRDate = e.getFullYear() + '-' + (""0"" + (e.getMonth() + 1)).slice(-2) + '-' + (""0"" + e.getDate()).slice(-2)


                    $('#consumerNo').text(ConsumerNo);
                    $('#MeterNo').text(WaterMeterNo);
                    $('#MeterType').text(WaterMeterTypeName);
                    $(");
            WriteLiteral(@"'#WaterConnection').text(WaterConnectionName);
                    $('#LineType').text(WaterLineTypeName);
                    $('#WaterConnectionStatus').text(WaterConnectionStatusName);
                    $('#Zone').text(ZoneName);
                    $('#ZoneReader').text(ZoneReader);
                    $('#ReadBy').text(ReadBy);
                    $('#PReading').text(PreviousReading);
                    $('#PRDate').text(PRDate);
                    $('#CReading').text(Reading);
                    $('#CRDate').text(CRDate);
                    $('#NoOfUnits').text(NoOfUnit);
                    $('#Consumption').text(Consumption);
                    $('#Sewerage').text(Sewerage);
                    $('#BAddress').text(BillingAddress);
                    $('#MobileNo').text(MobileNo);

                } else {
                    swal('no data');
                }
            },
            error: function () {
                $('#img').hide();
                alert('Error occ");
            WriteLiteral(@"ured');
            }
        });

            }
            $(""#btnCancel"").click(function () {
                $('#dvReadingInfo').hide(1000);
                $('#tblReadingDetails').hide(1000);
                $('#tblBillGenerate').hide(1000);
                $('#id_consumerno').focus();


            });


    $(function () {
        $(""#example1"").DataTable({
            ""responsive"": true,
            ""autoWidth"": false,
        });
        $('#example2').DataTable({
            ""paging"": true,
            ""lengthChange"": false,
            ""searching"": false,
            ""ordering"": true,
            ""info"": true,
            ""autoWidth"": false,
            ""responsive"": true,
        });
    });

    //Display Water Connection Details
    function displayDetails() {
        $('#tblBillGenerate').hide(1000);
        $('#id_consumerno').insertAfter(function () {
            var ConsumerNo = $('#id_consumerno').val();
            var MeterNo = $('#id_meterno').val();
");
            WriteLiteral("\r\n            if (ConsumerNo == ConsumerNo || MeterNo == MeterNo) {\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    url: \'");
#nullable restore
#line 335 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
                     Write(Url.Action("fetchWaterConnectionByConsumerNo", "WaterMeterReadings"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: {
                        consumerNo: ConsumerNo,
                        waterMeterNo: MeterNo
                    },
                    success: function (data) {
                        console.log(data);
                        $('#myBody').empty();

                        if (data.length > 0) {
                            $.each(data, function (key, value) {
                                $('#tblBillGenerate').show(1000);
                                $('html,body').animate({
                                    scrollTop: $(""#tblBillGenerate"").offset().top
                                }, 'slow');
                                $('#myBody').append(
                                    '<tr>'
                                    + '<td>' + (key + 1) + '</td>'
                                    + '<td>' + value.waterMeterNo + '</td>'
                                    + '<td>' + value.consumerNo + '</td>'
                                    + '<td>' ");
            WriteLiteral(@"+ value.billingAddress + '</td>'
                                    + '<td>' + value.waterConnectionName + '</td>'
                                    + '<td>' + value.waterMeterTypeName + '</td>'
                                    + '<td>' + value.waterLineTypeName + '</td>'
                                    + '<td>' + value.standardConsumption + '</td>'
                                    + '<td>' + value.sewerage + '</td>'
                                    + '<td>' + value.isActive + '</td>'
                                    + '<td><b><a style=""color: forestgreen; cursor: pointer;"" title=""select"" onclick=""return displayReadingDetails(' + value.waterConnectionId + ');""> select </a></b></td>'
                                    + '</tr>');
                            });
                        }
                        else {
                            $('#tblBillGenerate').hide(1000);
                            swal({
                                title: 'Please Enter valid Data',");
            WriteLiteral(@"
                                type: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function () {
                        alert('error');
                    }
                });
            } else {
                swal({
                    title: 'Fields cannot be empty!',
                    type: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    }

    //display water meter reading detaails
    function displayReadingDetails(WaterConnectionId) {
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 393 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
             Write(Url.Action("fetchReadinfById", "WaterMeterReadings"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {
                id: WaterConnectionId
            },
            success: function (data) {
                console.log(data);
                $('#tbl_Body').empty();

                if (data.length > 0) {
                    $.each(data, function (key, value) {
                        $('#tblReadingDetails').show(1000);
                        $('html,body').animate({
                            scrollTop: $(""#tblReadingDetails"").offset().top
                        }, 'slow');
                        //Displaying Date
                        const d = new Date(value.readingDate);
                        const readingDate = d.getFullYear() + '-' + (""0"" + (d.getMonth() + 1)).slice(-2) + '-' + (""0"" + d.getDate()).slice(-2)

                        $('#tbl_Body').append(
                             '<tr>'
                            + '<td>' + (key + 1) + '</td>'
                            + '<td>' + readingDate + '</td>'
                            + '<td>' + val");
            WriteLiteral(@"ue.reading + '</td>'
                            + '<td>' + value.previousReading + '</td>'
                            + '<td>' + value.noOfUnit + '</td>'
                            + '<td>' + value.standardConsumption + '</td>'
                            + '<td>' + value.waterConnectionName + '</td>'
                            + '<td>' + value.waterMeterTypeName + '</td>'
                            + '<td>' + value.waterLineTypeName + '</td>'
                            + '<td>' + value.sewerage + '</td>'
                            + '<td hidden> <input type=""text"" id=""hdnwaterMeterReadingId_' + key + '"" class=""form-control waterMeterReadingId"" value=' + value.waterMeterReadingId + ' /> </td>'
                            + '<td><b><a style=""color: forestgreen; cursor: pointer;"" title=""select"" onclick=""return displayReadingInfo(' + value.waterMeterReadingId + ');""> select </a></b></td>'

                            + '</tr>');
                    });
                }
                else ");
            WriteLiteral(@"{
                    swal({
                        title: 'No reading details found to generate the bill.!',
                        type: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function () {
                alert('error');
            }
        });
    }
        //Generating Demand
    $(""#Generate"").click(function () {

            var myarray = [];
            var WaterMeterReadingModel = {};
        WaterMeterReadingModel.WaterMeterReadingId = parseInt($(""#WaterMeterReadingId"").val());
        myarray.push(WaterMeterReadingModel);

            $('#img').show();
            $.ajax({
                type: ""POST"",
                url: '");
#nullable restore
#line 453 "D:\APPS\TT\ARMS\ARMS\Areas\Water\Views\WaterMeterReadings\BIllGenerate.cshtml"
                 Write(Url.Action("GenerateDemand", "WaterMeterReadings"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: JSON.stringify(myarray),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (response) {
                    if (response > 0) {
                        swal(""Bill generated successfully."");
                        $('#img').hide();
                        $(""#tblReadingDetails"").hide(1000);
                        $(""#dvReadingInfo"").hide(1000);
                        setTimeout(function () {
                            $('.alert').fadeOut(1000);
                            //location.reload();
                        }, 5000);
                    }
                    else {
                        alert(""Error saving payment details."");
                        $('#img').hide();
                    }

                },
                failure: function () {
                    $('#img').hide();
                    swal(""Creation Failed"");

                },
                e");
            WriteLiteral("rror: function () {\r\n                    $(\'#img\').hide();\r\n                    swal(\"Error while inserting\");\r\n                }\r\n            });\r\n    });\r\n        </script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CORE_BOL.WaterMeterReadingModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
