/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[trnConstructionApprovalApplicationFeeDetail]...';


GO
CREATE TABLE [dbo].[trnConstructionApprovalApplicationFeeDetail] (
    [constructionApprovalApplicationFeeId] INT          IDENTITY (1, 1) NOT NULL,
    [plotNo]                               VARCHAR (50) NOT NULL,
    [thramNo]                              VARCHAR (50) NOT NULL,
    [ttin]                                 VARCHAR (50) NOT NULL,
    [g2cApplicationNo]                     VARCHAR (50) NOT NULL,
    [createdOn]                            DATE         NOT NULL,
    [createdBy]                            INT          NOT NULL,
    [modifiedOn]                           DATE         NULL,
    [modifiedBy]                           INT          NULL,
    PRIMARY KEY CLUSTERED ([constructionApprovalApplicationFeeId] ASC)
);


GO
PRINT N'Altering Procedure [dbo].[rptDailyReceiptWiseCollectionByFromDateToDate]...';


GO
-- exec [dbo].[rptDailyReceiptWiseCollectionByFromDateToDate] '04/24/2021','05/15/2021'

-- =============================================
ALTER PROCEDURE [dbo].[rptDailyReceiptWiseCollectionByFromDateToDate]
	-- Add the parameters for the stored procedure here
		 @FromDate  Date ,@ToDate  Date
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
--SELECT FromDate,ToDate,ReceiptNo,PaymentModeNo,PaymentModeDate,PaymentDate,sum(CashAmount) as CashAmount,sum(ChecqueAmount) as ChecqueAmount,sum(ThromdeApp) as ThromdeApp,sum(OnlinePaymentAmount) as OnlinePaymentAmount
--,sum(PIAmount) as PIAmount,sum(MBOBAmount) as MBOBAmount,sum(mPayAmount) as mPayAmount,sum(DkAmount) as DkAmount,sum(TPayAmount) as TPayAmount,sum(DrukPNBAmount) as DrukPNBAmount,sum(ePayAmount) as ePayAmount,sum(eTeeruAmount) as eTeeruAmount

--FROM(
-- CASH
(
select convert(varchar ,@FromDate,103) as FromDate,convert(varchar ,@ToDate,103) as ToDate, 
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'-') as PaymentModeDate,convert(varchar ,pl.createdOn,103) as PaymentDate ,sum(pl.amount) as CashAmount,0 as ChecqueAmount,0 as ThromdeApp,0 as OnlinePaymentAmount
,0 as PIAmount,0 as MBOBAmount,0 as mPayAmount,0 as DkAmount,0 as TPayAmount,0 as DrukPNBAmount,0 as ePayAmount,0 as eTeeruAmount
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=1 and convert(varchar ,pl.createdOn,101)>=@FromDate and convert(varchar ,pl.createdOn,101)<=@ToDate
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)
UNION 
-- CHEQUE
(
select convert(varchar ,@FromDate,103) as FromDate,convert(varchar ,@ToDate,103) as ToDate, 
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'-') as PaymentModeDate,convert(varchar ,pl.createdOn,103) as PaymentDate ,0 as CashAmount,sum(pl.amount) as ChecqueAmount,0 as ThromdeApp,0 as OnlinePaymentAmount
,0 as PIAmount,0 as MBOBAmount,0 as mPayAmount,0 as DkAmount,0 as TPayAmount,0 as DrukPNBAmount,0 as ePayAmount,0 as eTeeruAmount
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=2 and convert(varchar ,pl.createdOn,101)>=@FromDate and convert(varchar ,pl.createdOn,101)<=@ToDate
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)

-- Thromde App
(
select convert(varchar ,@FromDate,103) as FromDate,convert(varchar ,@ToDate,103) as ToDate, 
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'-') as PaymentModeDate,convert(varchar ,pl.createdOn,103) as PaymentDate ,
0 as CashAmount,0 as ChecqueAmount,sum(pl.amount) as ThromdeApp,0 as OnlinePaymentAmount
,0 as PIAmount,0 as MBOBAmount,0 as mPayAmount,0 as DkAmount,0 as TPayAmount,0 as DrukPNBAmount,0 as ePayAmount,0 as eTeeruAmount
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=3 and convert(varchar ,pl.createdOn,101)>=@FromDate and convert(varchar ,pl.createdOn,101)<=@ToDate
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)
--) T group by ReceiptNo,FromDate,ToDate,PaymentModeNo,PaymentModeDate,PaymentDate
END
GO
PRINT N'Creating Procedure [dbo].[rptReconcilReport]...';


GO
-- Author: <Author,,Name>
-- Create date: <Create Date,,>
-- Description: <Description,,>
-- =============================================
-- exec [dbo].[rptReconcilReport] '20210423','20210630'

create PROCEDURE [dbo].[rptReconcilReport]
@StartDate int, @EndDate int

AS
--DECLARE @s SMALLDATETIME, @e SMALLDATETIME;
--set @s=@StartDate

--set @e=@EndDate

begin

set nocount on;
SELECT  ROW_NUMBER() OVER(
ORDER BY (select 1)) AS Sl,* from(
select 'Cash' as PaymentMode, '-' as PaymentModeNo,'-' as BranchName,'' as PaymentModeDate, sum(amount) as Amount, ps.paymentStatus as PaymentStatus, CONVERT(varchar, d.depositDate,103) as DepositDate, u.FirstName + '' + u.MiddleName + '' + u.LastName as DepositedBy from tblPaymentLeger pl
left join tblDeposit d on pl.paymentLedgerId = d.paymentLedgerId
left join enumPaymentStatus ps on d.paymentStatusId = ps.paymentStatusId
left join AspNetUsers u on d.createdBy = u.userId
where paymentModeId = 1 and
cast(convert(varchar,d.paymentFromDate,112) as int)>=@StartDate and cast(convert(varchar,d.paymentToDate,112) as int)<=@EndDate
group by paymentModeId, ps.paymentStatus, d.depositDate, u.FirstName + '' + u.MiddleName + '' + LastName
union all
select  pm.paymentMode as PaymentMode,pl.paymentModeNo as PaymentModeNo, bb.branchName as BranchName,
convert(varchar,pl.paymentModeDate,103) as PaymentModeDate, amount as Amount, ps.paymentStatus as PaymentStatus ,CONVERT(varchar, d.depositDate,103) as DepositDate, u.FirstName + '' + u.MiddleName + '' + u.LastName as DepositedBy from tblPaymentLeger pl
left join [dbo].[enumPaymentMode] pm on pl.paymentModeId = pm.paymentModeId
left join [dbo].[mstBankBranch] bb on pl.bankBranchId = bb.bankBranchId
left join tblDeposit d on pl.paymentLedgerId = d.paymentLedgerId
left join AspNetUsers u on d.createdBy = u.userId
left join enumPaymentStatus ps on d.paymentStatusId = ps.paymentStatusId

where pl.paymentModeId = 2 and cast(convert(varchar,d.paymentFromDate,112) as int)>=@StartDate and cast(convert(varchar,d.paymentToDate,112) as int)<=@EndDate) t  

end
GO
PRINT N'Update complete.';


GO
