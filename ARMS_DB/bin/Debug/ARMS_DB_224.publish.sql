/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Default Constraint [dbo].[DF__tmp_ms_xx__payme__73B00EE2]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [DF__tmp_ms_xx__payme__73B00EE2];


GO
PRINT N'Dropping Default Constraint [dbo].[DF__mstWaterC__noOfU__261B931E]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [DF__mstWaterC__noOfU__261B931E];


GO
PRINT N'Dropping Default Constraint [dbo].[DF__tmp_ms_xx__isRea__644DCFC1]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [DF__tmp_ms_xx__isRea__644DCFC1];


GO
PRINT N'Dropping Default Constraint [dbo].[DF__tmp_ms_xx__isAct__6541F3FA]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [DF__tmp_ms_xx__isAct__6541F3FA];


GO
PRINT N'Dropping Default Constraint [dbo].[DF__tmp_ms_xx__isDis__66361833]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [DF__tmp_ms_xx__isDis__66361833];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_15]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_15];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_7]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_7];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_8]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_8];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_9]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_9];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_0]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_0];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_10]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_10];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_11]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_11];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_2];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_4];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_13]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_13];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_14]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_14];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_12]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_12];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_5]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_5];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_6]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_6];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLedger_ToTable_3]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_3];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblComplainDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblComplainDetail] DROP CONSTRAINT [FK_tblComplainDetail_ToTable_2];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblInaccessibleWaterMeterDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblInaccessibleWaterMeterDetail] DROP CONSTRAINT [FK_tblInaccessibleWaterMeterDetail_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_trnWaterConnection_ToTable_10]...';


GO
ALTER TABLE [dbo].[trnWaterConnection] DROP CONSTRAINT [FK_trnWaterConnection_ToTable_10];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_2]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_2];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_3]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_3];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_4]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_4];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_5]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_5];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_6]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_6];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_7]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_7];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterBillChangeHistory_ToTable]...';


GO
ALTER TABLE [dbo].[tblWaterBillChangeHistory] DROP CONSTRAINT [FK_tblWaterBillChangeHistory_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblDemand_ToTable_14]...';


GO
ALTER TABLE [dbo].[tblDemand] DROP CONSTRAINT [FK_tblDemand_ToTable_14];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_2];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_3]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_3];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_4];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_5]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_5];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_6]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] DROP CONSTRAINT [FK_tblWaterMeterReading_ToTable_6];


GO
PRINT N'Starting rebuilding table [dbo].[tblLedger]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblLedger] (
    [ledgerId]                BIGINT          IDENTITY (1, 1) NOT NULL,
    [demandId]                BIGINT          NOT NULL,
    [transactionId]           BIGINT          NOT NULL,
    [taxId]                   INT             NOT NULL,
    [financialYearId]         INT             NOT NULL,
    [calendarYearId]          INT             NOT NULL,
    [landDetailId]            INT             NULL,
    [landOwnershipId]         INT             NULL,
    [buildingUnitDetailId]    INT             NULL,
    [taxPayerId]              INT             NULL,
    [totalAmount]             DECIMAL (18, 2) NOT NULL,
    [paymentDate]             DATETIME        NOT NULL,
    [receiptId]               BIGINT          NOT NULL,
    [reconciledOn]            DATETIME        NULL,
    [createdBy]               INT             NOT NULL,
    [createdOn]               DATETIME        NOT NULL,
    [modifiedBy]              INT             NULL,
    [modifiedOn]              DATETIME        NULL,
    [waterMeterReadingId]     BIGINT          NULL,
    [applicantId]             INT             NULL,
    [ecRenewalId]             INT             NULL,
    [landLeaseDemandDetailId] BIGINT          NULL,
    [parkingDemandDetailId]   BIGINT          NULL,
    [stallDemandDetailId]     BIGINT          NULL,
    [houseRentDemandDetailId] BIGINT          NULL,
    [miscellaneousRecordId]   BIGINT          NULL,
    [penaltyAmount]           DECIMAL (18, 2) NOT NULL,
    [penaltyPeriod]           INT             NOT NULL,
    [paymentStatusId]         INT             DEFAULT 1 NULL,
    PRIMARY KEY CLUSTERED ([ledgerId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblLedger])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblLedger] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblLedger] ([ledgerId], [demandId], [transactionId], [taxId], [financialYearId], [calendarYearId], [landDetailId], [landOwnershipId], [buildingUnitDetailId], [taxPayerId], [totalAmount], [paymentDate], [receiptId], [reconciledOn], [createdBy], [createdOn], [modifiedBy], [modifiedOn], [waterMeterReadingId], [applicantId], [ecRenewalId], [landLeaseDemandDetailId], [parkingDemandDetailId], [stallDemandDetailId], [houseRentDemandDetailId], [miscellaneousRecordId], [penaltyAmount], [penaltyPeriod], [paymentStatusId])
        SELECT   [ledgerId],
                 [demandId],
                 [transactionId],
                 [taxId],
                 [financialYearId],
                 [calendarYearId],
                 [landDetailId],
                 [landOwnershipId],
                 [buildingUnitDetailId],
                 [taxPayerId],
                 [totalAmount],
                 [paymentDate],
                 [receiptId],
                 [reconciledOn],
                 [createdBy],
                 [createdOn],
                 [modifiedBy],
                 [modifiedOn],
                 [waterMeterReadingId],
                 [applicantId],
                 [ecRenewalId],
                 [landLeaseDemandDetailId],
                 [parkingDemandDetailId],
                 [stallDemandDetailId],
                 [houseRentDemandDetailId],
                 [miscellaneousRecordId],
                 [penaltyAmount],
                 [penaltyPeriod],
                 [paymentStatusId]
        FROM     [dbo].[tblLedger]
        ORDER BY [ledgerId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblLedger] OFF;
    END

DROP TABLE [dbo].[tblLedger];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblLedger]', N'tblLedger';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[mstWaterConnection]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_mstWaterConnection] (
    [waterConnectionId]       INT             IDENTITY (1, 1) NOT NULL,
    [landDetailId]            INT             NOT NULL,
    [landOwnershipId]         INT             NOT NULL,
    [waterConnectionStatusId] INT             NOT NULL,
    [ownerTypeId]             INT             NOT NULL,
    [changeTypeId]            SMALLINT        NULL,
    [waterMeterNo]            VARCHAR (145)   NOT NULL,
    [waterMeterTypeId]        INT             NOT NULL,
    [consumerNo]              VARCHAR (145)   NOT NULL,
    [connectionDate]          DATE            NOT NULL,
    [sewerageConnection]      BIT             NOT NULL,
    [solidWaste]              BIT             NOT NULL,
    [waterConnectionTypeId]   INT             NOT NULL,
    [waterLineTypeId]         INT             NOT NULL,
    [standardConsumption]     DECIMAL (10, 2) NOT NULL,
    [createdBy]               INT             NOT NULL,
    [createdOn]               DATE            NOT NULL,
    [modifiedBy]              INT             NULL,
    [modifiedOn]              DATE            NULL,
    [billingAddress]          VARCHAR (100)   NOT NULL,
    [zoneId]                  INT             NOT NULL,
    [flatNo]                  VARCHAR (45)    NULL,
    [initialReading]          DECIMAL (10, 2) NOT NULL,
    [organisationName]        VARCHAR (450)   NULL,
    [isActive]                BIT             NOT NULL,
    [isPermanentConnection]   BIT             NULL,
    [remarks]                 VARCHAR (450)   NULL,
    [isPermanentDisconnect]   BIT             NULL,
    [disconnectDate]          DATE            NULL,
    [noOfUnits]               INT             DEFAULT 1 NOT NULL,
    [reconnectionDate]        DATE            NULL,
    [sewarageConnectionDate]  DATE            NULL,
    [sewarageConnectedBy]     INT             NULL,
    [primaryMobileNo]         VARCHAR (8)     NOT NULL,
    [secondaryMobileNo]       VARCHAR (8)     NULL,
    [transactionId]           BIGINT          NULL,
    [maxReadingDate]          DATE            NULL,
    PRIMARY KEY CLUSTERED ([waterConnectionId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[mstWaterConnection])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstWaterConnection] ON;
        INSERT INTO [dbo].[tmp_ms_xx_mstWaterConnection] ([waterConnectionId], [landDetailId], [landOwnershipId], [waterConnectionStatusId], [ownerTypeId], [changeTypeId], [waterMeterNo], [waterMeterTypeId], [consumerNo], [connectionDate], [sewerageConnection], [solidWaste], [waterConnectionTypeId], [waterLineTypeId], [standardConsumption], [createdBy], [createdOn], [modifiedBy], [modifiedOn], [billingAddress], [zoneId], [flatNo], [initialReading], [organisationName], [isActive], [isPermanentConnection], [remarks], [isPermanentDisconnect], [disconnectDate], [noOfUnits], [reconnectionDate], [sewarageConnectionDate], [sewarageConnectedBy], [primaryMobileNo], [secondaryMobileNo], [transactionId], [maxReadingDate])
        SELECT   [waterConnectionId],
                 [landDetailId],
                 [landOwnershipId],
                 [waterConnectionStatusId],
                 [ownerTypeId],
                 [changeTypeId],
                 [waterMeterNo],
                 [waterMeterTypeId],
                 [consumerNo],
                 [connectionDate],
                 [sewerageConnection],
                 [solidWaste],
                 [waterConnectionTypeId],
                 [waterLineTypeId],
                 [standardConsumption],
                 [createdBy],
                 [createdOn],
                 [modifiedBy],
                 [modifiedOn],
                 [billingAddress],
                 [zoneId],
                 [flatNo],
                 [initialReading],
                 [organisationName],
                 [isActive],
                 [isPermanentConnection],
                 [remarks],
                 [isPermanentDisconnect],
                 [disconnectDate],
                 [noOfUnits],
                 [reconnectionDate],
                 [sewarageConnectionDate],
                 [sewarageConnectedBy],
                 [primaryMobileNo],
                 [secondaryMobileNo],
                 [transactionId],
                 [maxReadingDate]
        FROM     [dbo].[mstWaterConnection]
        ORDER BY [waterConnectionId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstWaterConnection] OFF;
    END

DROP TABLE [dbo].[mstWaterConnection];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_mstWaterConnection]', N'mstWaterConnection';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[tblWaterMeterReading]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblWaterMeterReading] (
    [waterMeterReadingId]     BIGINT        IDENTITY (1, 1) NOT NULL,
    [waterConnectionId]       INT           NOT NULL,
    [transactionId]           BIGINT        NULL,
    [waterConnectionTypeId]   INT           NOT NULL,
    [waterMeterTypeId]        INT           NOT NULL,
    [waterLineTypeId]         INT           NOT NULL,
    [waterConnectionStatusId] INT           NOT NULL,
    [bucid]                   INT           NULL,
    [zoneId]                  INT           NOT NULL,
    [reading]                 INT           NOT NULL,
    [isRead]                  BIT           DEFAULT 0 NOT NULL,
    [readingDate]             DATE          NOT NULL,
    [previousReading]         INT           NOT NULL,
    [previousReadingDate]     DATE          NOT NULL,
    [readBy]                  INT           NOT NULL,
    [noOfUnit]                INT           NOT NULL,
    [consumption]             INT           NOT NULL,
    [standardConsumption]     INT           NULL,
    [isPermanentConnection]   BIT           NOT NULL,
    [sewerage]                BIT           NOT NULL,
    [solidWaste]              BIT           NOT NULL,
    [remarks]                 VARCHAR (250) NULL,
    [flatNo]                  VARCHAR (45)  NULL,
    [billingAddress]          VARCHAR (350) NOT NULL,
    [primaryMobileNo]         VARCHAR (150) NOT NULL,
    [secondaryMobileNo]       VARCHAR (150) NULL,
    [isActive]                BIT           DEFAULT 1 NOT NULL,
    [isDisconnected]          BIT           DEFAULT 0 NOT NULL,
    [createdOn]               DATETIME      NOT NULL,
    [createdBy]               INT           NOT NULL,
    [modifiedOn]              DATETIME      NULL,
    [modifiedBy]              INT           NULL,
    [createTransactionId]     BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([waterMeterReadingId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblWaterMeterReading])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblWaterMeterReading] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblWaterMeterReading] ([waterMeterReadingId], [waterConnectionId], [transactionId], [waterConnectionTypeId], [waterMeterTypeId], [waterLineTypeId], [waterConnectionStatusId], [bucid], [zoneId], [reading], [isRead], [readingDate], [previousReading], [previousReadingDate], [readBy], [noOfUnit], [consumption], [standardConsumption], [isPermanentConnection], [sewerage], [solidWaste], [remarks], [flatNo], [billingAddress], [primaryMobileNo], [secondaryMobileNo], [isActive], [isDisconnected], [createdOn], [createdBy], [modifiedOn], [modifiedBy], [createTransactionId])
        SELECT   [waterMeterReadingId],
                 [waterConnectionId],
                 [transactionId],
                 [waterConnectionTypeId],
                 [waterMeterTypeId],
                 [waterLineTypeId],
                 [waterConnectionStatusId],
                 [bucid],
                 [zoneId],
                 [reading],
                 [isRead],
                 [readingDate],
                 [previousReading],
                 [previousReadingDate],
                 [readBy],
                 [noOfUnit],
                 [consumption],
                 [standardConsumption],
                 [isPermanentConnection],
                 [sewerage],
                 [solidWaste],
                 [remarks],
                 [flatNo],
                 [billingAddress],
                 [primaryMobileNo],
                 [secondaryMobileNo],
                 [isActive],
                 [isDisconnected],
                 [createdOn],
                 [createdBy],
                 [modifiedOn],
                 [modifiedBy],
                 [createTransactionId]
        FROM     [dbo].[tblWaterMeterReading]
        ORDER BY [waterMeterReadingId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblWaterMeterReading] OFF;
    END

DROP TABLE [dbo].[tblWaterMeterReading];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblWaterMeterReading]', N'tblWaterMeterReading';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_15]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_15] FOREIGN KEY ([waterMeterReadingId]) REFERENCES [dbo].[tblWaterMeterReading] ([waterMeterReadingId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable] FOREIGN KEY ([demandId]) REFERENCES [dbo].[tblDemand] ([demandId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_7]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_7] FOREIGN KEY ([financialYearId]) REFERENCES [dbo].[mstFinancialYear] ([financialYearId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_8]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_8] FOREIGN KEY ([calendarYearId]) REFERENCES [dbo].[mstCalendarYear] ([calendarYearId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_9]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_9] FOREIGN KEY ([miscellaneousRecordId]) REFERENCES [dbo].[tblMiscellaneousRecord] ([miscellaneousRecordId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_0]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_0] FOREIGN KEY ([taxId]) REFERENCES [dbo].[mstTaxMaster] ([taxId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_1] FOREIGN KEY ([applicantId]) REFERENCES [dbo].[mstECApplicantdetail] ([applicantId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_10]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_10] FOREIGN KEY ([transactionId]) REFERENCES [dbo].[tblTransactionDetail] ([transactionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_11]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_11] FOREIGN KEY ([receiptId]) REFERENCES [dbo].[tblReceipt] ([receiptId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_2] FOREIGN KEY ([ecRenewalId]) REFERENCES [dbo].[tblECRenewalDetail] ([ecRenewalId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_4] FOREIGN KEY ([parkingDemandDetailId]) REFERENCES [dbo].[tblParkingFeeDemandDetail] ([parkingDemandDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_13]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_13] FOREIGN KEY ([paymentStatusId]) REFERENCES [dbo].[enumPaymentStatus] ([paymentStatusId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_14]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_14] FOREIGN KEY ([buildingUnitDetailId]) REFERENCES [dbo].[mstBuildingUnitDetail] ([buildingUnitDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_12]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_12] FOREIGN KEY ([landOwnershipId]) REFERENCES [dbo].[tblLandOwnershipDetail] ([landOwnershipId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_5]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_5] FOREIGN KEY ([stallDemandDetailId]) REFERENCES [dbo].[tblStallDetailDemand] ([stallDemandDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_6]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_6] FOREIGN KEY ([houseRentDemandDetailId]) REFERENCES [dbo].[tblHouseRentDemandDetail] ([houseRentDemandDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLedger_ToTable_3]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_3] FOREIGN KEY ([landLeaseDemandDetailId]) REFERENCES [dbo].[tblLandLeaseDemandDetail] ([landLeaseDemandDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblComplainDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblComplainDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblComplainDetail_ToTable_2] FOREIGN KEY ([waterConnectionId]) REFERENCES [dbo].[mstWaterConnection] ([waterConnectionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblInaccessibleWaterMeterDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblInaccessibleWaterMeterDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblInaccessibleWaterMeterDetail_ToTable] FOREIGN KEY ([waterConnectionId]) REFERENCES [dbo].[mstWaterConnection] ([waterConnectionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable] FOREIGN KEY ([waterConnectionId]) REFERENCES [dbo].[mstWaterConnection] ([waterConnectionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnWaterConnection_ToTable_10]...';


GO
ALTER TABLE [dbo].[trnWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_trnWaterConnection_ToTable_10] FOREIGN KEY ([oldWaterConnectionId]) REFERENCES [dbo].[mstWaterConnection] ([waterConnectionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_2]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_2] FOREIGN KEY ([waterConnectionStatusId]) REFERENCES [dbo].[enumWaterConnectionStatus] ([waterConnectionStatusId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_3]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_3] FOREIGN KEY ([waterConnectionTypeId]) REFERENCES [dbo].[mstWaterConnectionType] ([waterConnectionTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_4]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_4] FOREIGN KEY ([waterLineTypeId]) REFERENCES [dbo].[mstWaterLineType] ([waterLineTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_5]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_5] FOREIGN KEY ([zoneId]) REFERENCES [dbo].[mstZone] ([zoneId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_6]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_6] FOREIGN KEY ([ownerTypeId]) REFERENCES [dbo].[enumOwnerType] ([ownerTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_7]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_7] FOREIGN KEY ([landOwnershipId]) REFERENCES [dbo].[tblLandOwnershipDetail] ([landOwnershipId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable_1] FOREIGN KEY ([waterMeterTypeId]) REFERENCES [dbo].[mstWaterMeterType] ([waterMeterTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterBillChangeHistory_ToTable]...';


GO
ALTER TABLE [dbo].[tblWaterBillChangeHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterBillChangeHistory_ToTable] FOREIGN KEY ([waterMeterReadingId]) REFERENCES [dbo].[tblWaterMeterReading] ([waterMeterReadingId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblDemand_ToTable_14]...';


GO
ALTER TABLE [dbo].[tblDemand] WITH NOCHECK
    ADD CONSTRAINT [FK_tblDemand_ToTable_14] FOREIGN KEY ([waterMeterReadingId]) REFERENCES [dbo].[tblWaterMeterReading] ([waterMeterReadingId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_1] FOREIGN KEY ([waterConnectionTypeId]) REFERENCES [dbo].[mstWaterConnectionType] ([waterConnectionTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_2] FOREIGN KEY ([waterMeterTypeId]) REFERENCES [dbo].[mstWaterMeterType] ([waterMeterTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_3]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_3] FOREIGN KEY ([waterLineTypeId]) REFERENCES [dbo].[mstWaterLineType] ([waterLineTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_4] FOREIGN KEY ([waterConnectionStatusId]) REFERENCES [dbo].[enumWaterConnectionStatus] ([waterConnectionStatusId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_5]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_5] FOREIGN KEY ([transactionId]) REFERENCES [dbo].[tblTransactionDetail] ([transactionId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblWaterMeterReading_ToTable_6]...';


GO
ALTER TABLE [dbo].[tblWaterMeterReading] WITH NOCHECK
    ADD CONSTRAINT [FK_tblWaterMeterReading_ToTable_6] FOREIGN KEY ([createTransactionId]) REFERENCES [dbo].[tblTransactionDetail] ([transactionId]);


GO
PRINT N'Refreshing View [dbo].[ViewProertyTaxLedger]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ViewProertyTaxLedger]';


GO
PRINT N'Refreshing View [dbo].[View_ReadingSeet]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[View_ReadingSeet]';


GO
PRINT N'Altering Procedure [dbo].[rptGetDailyHeadWiseDemandCollection]...';


GO

--	exec [dbo].[rptGetDailyHeadWiseDemandCollection] '06/27/2021', '06/30/2021'

ALTER PROCEDURE [dbo].[rptGetDailyHeadWiseDemandCollection] 
	@StartDate date, @EndDate date
	
AS

begin

	set nocount on;

	select ROW_NUMBER() over(order by(select 1)) as sl,  FORMAT (l.paymentDate, 'dd/MM/yyyy') as PaymentDate, t.taxName as TaxName, l.totalAmount as TotalAmount, l.penaltyAmount as PenaltyAmount,
	FORMAT (@StartDate, 'dd/MM/yyyy') as StartDate, FORMAT (@EndDate, 'dd/MM/yyyy')  as EndDate
	
	from tblLedger as l
	inner join tblDemand as d on l.demandId = d.demandId
	inner join mstTaxMaster as t on l.taxId = t.taxId
	where d.isPaymentMade = 1 and 
		FORMAT (l.paymentDate, 'yyyyMMdd') >= FORMAT (@StartDate, 'yyyyMMdd') 
	and FORMAT (l.paymentDate, 'yyyyMMdd') <= FORMAT (@EndDate, 'yyyyMMdd') 

end
GO
PRINT N'Altering Procedure [dbo].[rptGetYearlyHeadWiseDemandCollection]...';


GO


ALTER PROCEDURE [dbo].[rptGetYearlyHeadWiseDemandCollection] 
	@FinancialYearId int
	
AS


begin

	set nocount on;
	declare @fyr  varchar(20)
	set @fyr=(select FinancialYear from mstFinancialYear where financialYearId=@FinancialYearId);
			select ROW_NUMBER() over(order by(select 1)) as sl,t.taxName as TaxName,sum(l.totalAmount) as TotalAmount, @fyr as FinancialYear
			from tblLedger as l 
			inner join mstTaxMaster as t on l.taxId = t.taxId
			inner join mstFinancialYear as f on l.financialYearId =f.financialYearId
			where l.financialYearId = @FinancialYearId
			group by t.taxName
			 

end
GO
PRINT N'Altering Procedure [dbo].[rptGetTaxRates]...';


GO

ALTER PROCEDURE [dbo].[rptGetTaxRates]
	@TransactionTypeId int
AS
--	EXEC [dbo].[rptGetTaxRates] 19

  SELECT ROW_NUMBER() over(order by(select 1)) as sl, t.taxName as taxName, s.slabName as slabName, s.slabStart as slabStart, FORMAT (s.effectiveDate, 'dd/MM/yyyy') as effectiveDate, s.slabEnd as slabEnd,
  r.rate as rate
   
   from mstRate r 
   join mstTaxMaster t on r.taxId=t.taxId
   join mstSlab s on r.slabId=s.slabId
   left join mstTransactionTypeTaxMap ty on t.taxId=ty.taxId
--   left join mstLandUseSubCategory sc on s.landUseSubCategoryId=sc.landUseSubCategoryId
   where ty.transactionTypeId=@TransactionTypeId
RETURN 0
GO
PRINT N'Altering Procedure [dbo].[rptIndividualReceiptWiseCollection]...';


GO



-- exec [dbo].[rptIndividualReceiptWiseCollection] '20210423','20210424'

ALTER PROCEDURE [dbo].[rptIndividualReceiptWiseCollection]
@FromDate  date ,@ToDate  date
AS
BEGIN
SET NOCOUNT ON;
-- CASH 1

 SELECT  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl, * from (
(
select
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate,
convert(varchar ,pl.createdOn,103) as PaymentDate ,sum(pl.amount) as Cash,0 as Cheque
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=1 and
FORMAT (pl.createdOn, 'yyyyMMdd') >= FORMAT (@FromDate, 'yyyyMMdd')
and FORMAT (pl.createdOn, 'yyyyMMdd') <= FORMAT (@ToDate, 'yyyyMMdd')

group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)
UNION all
-- CHEQUE 2
(
select
--convert(varchar ,@FromDate,103) as FromDate,convert(varchar ,@ToDate,103) as ToDate,
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate,
convert(varchar ,pl.createdOn,103) as PaymentDate ,0 as Cash,sum(pl.amount) as Cheque from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
where pl.paymentModeId=2 and 
FORMAT (pl.createdOn, 'yyyyMMdd') >= FORMAT (@FromDate, 'yyyyMMdd')
and FORMAT (pl.createdOn, 'yyyyMMdd') <= FORMAT (@ToDate, 'yyyyMMdd')

group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate
)) gg
order by ReceiptNo
END
GO
PRINT N'Altering Procedure [dbo].[rptMinorHeadWiseCollectionbycalyear]...';


GO

ALTER PROCEDURE [dbo].[rptMinorHeadWiseCollectionbycalyear] 
	@CalendarYearId int
	
AS


begin


	set nocount on;
	
	Select ROW_NUMBER() over(order by(select 1)) as Sl,
	m.minorHeadName as MinorHeadName
	,sum(de.totalAmount) as TotalAmount
	from mstMinorHead m
    inner join mstDetailHead as d on m.minorHeadId = d.minorHeadId
    inner join mstTaxMaster as t on d.detailHeadId = t.detailHeadId
    inner join tblDemand as de on t.taxId = de.taxId
	where de.isPaymentMade = 1  and de.calendarYearId = @CalendarYearId
	 group by m.minorHeadId, m.minorHeadName
			
			

end
GO
PRINT N'Altering Procedure [dbo].[rptMinorHeadWiseCollectionbytofromdate]...';


GO

ALTER PROCEDURE [dbo].[rptMinorHeadWiseCollectionbytofromdate] 
	@StartDate date, @EndDate date
	
AS


begin

	set nocount on;
	 
	Select ROW_NUMBER() over(order by(select 1)) as Sl,
	m.minorHeadName as MinorHeadName
	,sum(de.totalAmount) as TotalAmount
	from mstMinorHead m
    inner join mstDetailHead as d on m.minorHeadId = d.minorHeadId
    inner join mstTaxMaster as t on d.detailHeadId = t.detailHeadId
    inner join tblDemand as de on t.taxId = de.taxId
	where de.isPaymentMade = 1  and
FORMAT (de.paymentDate, 'yyyyMMdd') >= FORMAT (@StartDate, 'yyyyMMdd')
and FORMAT (de.paymentDate, 'yyyyMMdd') <= FORMAT (@EndDate, 'yyyyMMdd')	
group by m.minorHeadId, m.minorHeadName
	 
	
end
GO
PRINT N'Altering Procedure [dbo].[rptMissedOutReadingReport]...';


GO

-- exec [dbo].[rptMissedOutReadingReport] 

ALTER PROCEDURE [dbo].[rptMissedOutReadingReport]

AS
begin
set nocount on;

SELECT  ROW_NUMBER() OVER(
ORDER BY (select 1)) AS Sl,* from(
select 
wc.consumerNo as ConsumerNo,wc.waterMeterNo as MeterNo,  FORMAT (wc.connectionDate, 'dd/MM/yyyy') as connectionDate,wmr.isActive as ActiveStatus,wl.waterLineType as LineType,
wct.waterConnectionType as ConnectionType,wcs.waterConnectionStatus as ConnectionStatus,wmr.flatNo as FlatNo,wmr.billingAddress as BillingAddress
from tblWaterMeterReading wmr
inner join mstWaterConnection wc on wmr.waterConnectionId = wc.waterConnectionId
inner join mstWaterLineType wl on wmr.waterLineTypeId = wl.waterLineTypeId
inner join mstWaterConnectionType wct on wmr.waterConnectionTypeId = wct.waterConnectionTypeId 
inner join enumWaterConnectionStatus wcs on wmr.waterConnectionStatusId = wcs.waterConnectionStatusId
where wmr.isRead = 0 
--and 
--wmr.transactionId is null and Format(wmr.readingDate,'yyyyMM')+'01' = Format(DATEADD(month, -1, @ReadingMonth),'yyyyMM')+'01' 
) gg
end
GO
PRINT N'Altering Procedure [dbo].[rptReconcilReport]...';


GO

-- exec [dbo].[rptReconcilReport] '05/30/2021','06/17/2021'

ALTER PROCEDURE [dbo].[rptReconcilReport]
@StartDate date, @EndDate date

AS


begin

set nocount on;
SELECT  ROW_NUMBER() OVER(
ORDER BY (select 1)) AS Sl,* from(
select 'Cash' as PaymentMode, '-' as PaymentModeNo,'-' as BranchName,'' as PaymentModeDate, sum(amount) as Amount, ps.paymentStatus as PaymentStatus, FORMAT(d.depositDate,'dd/MM/yyyy') as DepositDate, u.FirstName + '' + u.MiddleName + '' + u.LastName as DepositedBy from tblPaymentLeger pl
left join tblDeposit d on pl.paymentLedgerId = d.paymentLedgerId
left join enumPaymentStatus ps on d.paymentStatusId = ps.paymentStatusId
left join AspNetUsers u on d.createdBy = u.userId
where paymentModeId = 1 and
FORMAT (d.paymentFromDate, 'yyyyMMdd') >= FORMAT (@StartDate, 'yyyyMMdd') 
and FORMAT (d.paymentToDate, 'yyyyMMdd') <= FORMAT (@EndDate, 'yyyyMMdd') 

group by paymentModeId, ps.paymentStatus, d.depositDate, u.FirstName + '' + u.MiddleName + '' + LastName
union all
select  pm.paymentMode as PaymentMode,pl.paymentModeNo as PaymentModeNo, bb.branchName as BranchName,
 FORMAT(pl.paymentModeDate,'dd/MM/yyyy') as PaymentModeDate, amount as Amount, ps.paymentStatus as PaymentStatus , FORMAT(d.depositDate,'dd/MM/yyyy') as DepositDate, u.FirstName + '' + u.MiddleName + '' + u.LastName as DepositedBy from tblPaymentLeger pl
left join [dbo].[enumPaymentMode] pm on pl.paymentModeId = pm.paymentModeId
left join [dbo].[mstBankBranch] bb on pl.bankBranchId = bb.bankBranchId
left join tblDeposit d on pl.paymentLedgerId = d.paymentLedgerId
left join AspNetUsers u on d.createdBy = u.userId
left join enumPaymentStatus ps on d.paymentStatusId = ps.paymentStatusId

where pl.paymentModeId = 2 and 
FORMAT (d.paymentFromDate, 'yyyyMMdd') >= FORMAT (@StartDate, 'yyyyMMdd') 
and FORMAT (d.paymentToDate, 'yyyyMMdd') <= FORMAT (@EndDate, 'yyyyMMdd'))t  

end
GO
PRINT N'Creating Procedure [dbo].[rptMonthlyZoneWiseWaterConsumption]...';


GO

     

-- exec [dbo].[rptMonthlyZoneWiseWaterConsumption] '15','2021','6'

CREATE PROCEDURE [dbo].[rptMonthlyZoneWiseWaterConsumption]
@ZoneId int, @YearId  varchar(200), @MonthId int
AS
BEGIN
SET NOCOUNT ON;
  
select  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl,ConsumerNo, @YearId as Yr, @MonthId as Mnths, MeterNo,Consumption,TotalAmount,PaymentStatus
	   from
	   (
(
select 
wc.consumerNo as ConsumerNo, wc.waterMeterNo as MeterNo,
sum(wmr.consumption) as Consumption, sum(l.totalAmount) as TotalAmount,'Paid' as PaymentStatus
from tblLedger l 
left join tblDemand d on l.demandId=d.demandId
left join tblTransactionDetail td on l.transactionId = td.transactionId
left join tblWaterMeterReading wmr on td.transactionId = wmr.transactionId
left join mstZone z on wmr.zoneId = z.zoneId
left join mstWaterConnection wc on wmr.waterConnectionId = wc.waterConnectionId
left join mstCalendarYear cy on l.calendarYearId = cy.calendarYearId

where  td.transactionTypeId = 19 and z.zoneId = @ZoneId and cy.calendarYear =@YearId  and isPaymentMade = 1
and MONTH(l.paymentDate) = @MonthId
group by  ConsumerNo, waterMeterNo

)
union
(
select
wc.consumerNo as ConsumerNo, wc.waterMeterNo as MeterNo,
sum(wmr.consumption) as Consumption, sum(d.demandAmount) as TotalAmount, 'Unpaid' as PaymentStatus
from  tblDemand d 
left join tblTransactionDetail td on d.transactionId = td.transactionId
left join tblWaterMeterReading wmr on td.transactionId = wmr.transactionId
left join mstWaterConnection wc on wmr.waterConnectionId = wc.waterConnectionId
left join mstZone z on wmr.zoneId = z.zoneId
left join mstCalendarYear cy on d.calendarYearId = cy.calendarYearId
where  td.transactionTypeId = 19 and z.zoneId = @ZoneId and cy.calendarYear = @YearId and d.isPaymentMade = 0
and MONTH(d.billingDate) = @MonthId

group by  ConsumerNo, waterMeterNo

)) f ORDER BY f.ConsumerNo ASC,PaymentStatus asc

END
GO
PRINT N'Creating Procedure [dbo].[rptZoneWiseWaterCollection]...';


GO

-- exec [dbo].[rptZoneWiseWaterCollection] '4'

CREATE PROCEDURE [dbo].[rptZoneWiseWaterCollection]
@ZoneId int 

AS
begin

set nocount on;
SELECT  ROW_NUMBER() OVER(
ORDER BY (select 1)) AS Sl,* from(

--RESITDENTIAL
select wct.waterConnectionType as WaterConnectionType, count(wc.waterConnectionId) as TotalNo from mstWaterConnection wc
left join mstWaterConnectionType wct on wc.waterConnectionTypeId = wct.waterConnectionTypeId
where wc.waterConnectionTypeId = 1 and wc.zoneId = @ZoneId
group by wct.waterConnectionType

union all

--COMMERCIAL
select wct.waterConnectionType as WaterConnectionType, count(wc.waterConnectionId) as TotalNo from mstWaterConnection wc
left join mstWaterConnectionType wct on wc.waterConnectionTypeId = wct.waterConnectionTypeId
where wc.waterConnectionTypeId = 2 and wc.zoneId = @ZoneId
group by wct.waterConnectionType

union all

--INSTITUTIONAL
select wct.waterConnectionType as WaterConnectionType, count(wc.waterConnectionId) as TotalNo from mstWaterConnection wc
left join mstWaterConnectionType wct on wc.waterConnectionTypeId = wct.waterConnectionTypeId
where wc.waterConnectionTypeId = 3 and wc.zoneId = @ZoneId
group by wct.waterConnectionType

union all

--INDUSTRIAL
select wct.waterConnectionType as WaterConnectionType, count(wc.waterConnectionId) as TotalNo from mstWaterConnection wc
left join mstWaterConnectionType wct on wc.waterConnectionTypeId = wct.waterConnectionTypeId
where wc.waterConnectionTypeId = 4 and wc.zoneId = @ZoneId
group by wct.waterConnectionType
)w
end
GO
PRINT N'Creating Procedure [dbo].[rptZoneWiseWaterConsumption]...';


GO


-- exec [dbo].[rptZoneWiseWaterConsumption] '15','2021'

create PROCEDURE [dbo].[rptZoneWiseWaterConsumption]
@ZoneId int, @YearId  varchar(200)
AS
BEGIN
SET NOCOUNT ON;
  
select  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl,@YearId as Yr,ConsumerNo,MeterNo,Consumption,TotalAmount,PaymentStatus
	   from
	   (
(
select 
wc.consumerNo as ConsumerNo, wc.waterMeterNo as MeterNo,
sum(wmr.consumption) as Consumption, sum(l.totalAmount) as TotalAmount,'Paid' as PaymentStatus

from tblLedger l 
left join tblDemand d on l.demandId=d.demandId
left join tblTransactionDetail td on l.transactionId = td.transactionId
left join tblWaterMeterReading wmr on td.transactionId = wmr.transactionId
left join mstZone z on wmr.zoneId = z.zoneId
left join mstWaterConnection wc on wmr.waterConnectionId = wc.waterConnectionId
left join mstCalendarYear cy on l.calendarYearId = cy.calendarYearId

where  td.transactionTypeId = 19 and z.zoneId = @ZoneId and cy.calendarYear =@YearId  and isPaymentMade = 1 

group by  ConsumerNo, waterMeterNo 

)
union
(
select
wc.consumerNo as ConsumerNo, wc.waterMeterNo as MeterNo,
sum(wmr.consumption) as Consumption, sum(d.demandAmount) as TotalAmount, 'Unpaid' as PaymentStatus

from  tblDemand d 
left join tblTransactionDetail td on d.transactionId = td.transactionId
left join tblWaterMeterReading wmr on td.transactionId = wmr.transactionId
left join mstWaterConnection wc on wmr.waterConnectionId = wc.waterConnectionId
left join mstZone z on wmr.zoneId = z.zoneId
left join mstCalendarYear cy on d.calendarYearId = cy.calendarYearId
where  td.transactionTypeId = 19 and z.zoneId = @ZoneId and cy.calendarYear = @YearId and d.isPaymentMade = 0

group by  ConsumerNo, waterMeterNo

)) f ORDER BY f.ConsumerNo ASC,PaymentStatus asc

END
GO
PRINT N'Refreshing Procedure [dbo].[rptDailyPaymentWiseDemandCollection]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[rptDailyPaymentWiseDemandCollection]';


GO
PRINT N'Refreshing Procedure [dbo].[rptDefaulterWaterList]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[rptDefaulterWaterList]';


GO
PRINT N'Refreshing Procedure [dbo].[rptGetWaterConsumption]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[rptGetWaterConsumption]';


GO
PRINT N'Refreshing Procedure [dbo].[rptMonthlyMeterReader]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[rptMonthlyMeterReader]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_15];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_7];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_8];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_9];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_0];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_1];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_10];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_11];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_2];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_4];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_13];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_14];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_12];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_5];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_6];

ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_3];

ALTER TABLE [dbo].[tblComplainDetail] WITH CHECK CHECK CONSTRAINT [FK_tblComplainDetail_ToTable_2];

ALTER TABLE [dbo].[tblInaccessibleWaterMeterDetail] WITH CHECK CHECK CONSTRAINT [FK_tblInaccessibleWaterMeterDetail_ToTable];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable];

ALTER TABLE [dbo].[trnWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_trnWaterConnection_ToTable_10];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_2];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_3];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_4];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_5];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_6];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_7];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable_1];

ALTER TABLE [dbo].[tblWaterBillChangeHistory] WITH CHECK CHECK CONSTRAINT [FK_tblWaterBillChangeHistory_ToTable];

ALTER TABLE [dbo].[tblDemand] WITH CHECK CHECK CONSTRAINT [FK_tblDemand_ToTable_14];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_1];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_2];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_3];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_4];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_5];

ALTER TABLE [dbo].[tblWaterMeterReading] WITH CHECK CHECK CONSTRAINT [FK_tblWaterMeterReading_ToTable_6];


GO
PRINT N'Update complete.';


GO
