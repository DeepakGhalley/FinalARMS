/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_tblLedger_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblLedger] DROP CONSTRAINT [FK_tblLedger_ToTable_4];


GO
PRINT N'Dropping [dbo].[FK_tblDemand_ToTable_9]...';


GO
ALTER TABLE [dbo].[tblDemand] DROP CONSTRAINT [FK_tblDemand_ToTable_9];


GO
PRINT N'Dropping [dbo].[FK_tblParkingFeeDemandDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] DROP CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_2];


GO
PRINT N'Dropping [dbo].[FK_tblParkingFeeDemandDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] DROP CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable];


GO
PRINT N'Dropping [dbo].[FK_tblParkingFeeDemandDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] DROP CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_1];


GO
PRINT N'Starting rebuilding table [dbo].[tblParkingFeeDemandDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblParkingFeeDemandDetail] (
    [parkingDemandDetailId]    BIGINT          IDENTITY (1, 1) NOT NULL,
    [parkingFeeDetailId]       INT             NOT NULL,
    [demandYear]               INT             NOT NULL,
    [demandGenerateScheduleId] INT             NOT NULL,
    [demandNoId]               BIGINT          NOT NULL,
    [installmentAmount]        DECIMAL (18, 2) NOT NULL,
    [installmentDate]          DATETIME        NOT NULL,
    [demandDays]               INT             NULL,
    [createdBy]                INT             NOT NULL,
    [createdOn]                DATETIME        NOT NULL,
    [modifiedBy]               INT             NULL,
    [modifiedOn]               DATETIME        NULL,
    PRIMARY KEY CLUSTERED ([parkingDemandDetailId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblParkingFeeDemandDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblParkingFeeDemandDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblParkingFeeDemandDetail] ([parkingDemandDetailId], [parkingFeeDetailId], [demandYear], [demandGenerateScheduleId], [demandNoId], [installmentAmount], [installmentDate], [createdBy], [createdOn], [modifiedBy], [modifiedOn])
        SELECT   [parkingDemandDetailId],
                 [parkingFeeDetailId],
                 [demandYear],
                 [demandGenerateScheduleId],
                 [demandNoId],
                 [installmentAmount],
                 [installmentDate],
                 [createdBy],
                 [createdOn],
                 [modifiedBy],
                 [modifiedOn]
        FROM     [dbo].[tblParkingFeeDemandDetail]
        ORDER BY [parkingDemandDetailId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblParkingFeeDemandDetail] OFF;
    END

DROP TABLE [dbo].[tblParkingFeeDemandDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblParkingFeeDemandDetail]', N'tblParkingFeeDemandDetail';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_tblLedger_ToTable_4]...';


GO
ALTER TABLE [dbo].[tblLedger] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLedger_ToTable_4] FOREIGN KEY ([parkingDemandDetailId]) REFERENCES [dbo].[tblParkingFeeDemandDetail] ([parkingDemandDetailId]);


GO
PRINT N'Creating [dbo].[FK_tblDemand_ToTable_9]...';


GO
ALTER TABLE [dbo].[tblDemand] WITH NOCHECK
    ADD CONSTRAINT [FK_tblDemand_ToTable_9] FOREIGN KEY ([parkingDemandDetailId]) REFERENCES [dbo].[tblParkingFeeDemandDetail] ([parkingDemandDetailId]);


GO
PRINT N'Creating [dbo].[FK_tblParkingFeeDemandDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_2] FOREIGN KEY ([demandNoId]) REFERENCES [dbo].[tblDemandNo] ([demandNoId]);


GO
PRINT N'Creating [dbo].[FK_tblParkingFeeDemandDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable] FOREIGN KEY ([parkingFeeDetailId]) REFERENCES [dbo].[tblParkingfeeDetail] ([parkingFeeDetailId]);


GO
PRINT N'Creating [dbo].[FK_tblParkingFeeDemandDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_1] FOREIGN KEY ([demandGenerateScheduleId]) REFERENCES [dbo].[enumDemandGenerateSchedule] ([demandGenerateScheduleId]);


GO
PRINT N'Altering [dbo].[GetVendorDemandSchedule]...';


GO

ALTER PROCEDURE [dbo].[GetVendorDemandSchedule]
@Id int,@StartDate varchar(20),@EndDate varchar(20)
AS
BEGIN
--EXEC [dbo].[GetVendorDemandSchedule] 1,'20200101','20200501'

-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
DECLARE @s SMALLDATETIME, @e SMALLDATETIME;
-- SELECT  @s =convert(varchar,@StartDate, 112) ,  @e =convert(varchar,@EndDate, 112);
SELECT  @s = @StartDate,  @e = @EndDate;

;WITH n(n) AS
(
  SELECT TOP (DATEDIFF(MONTH, @s, @e)+1) ROW_NUMBER() OVER
  (ORDER BY [object_id])-1 FROM sys.all_objects
),
x(n,fd,ld) AS
(
  SELECT n.n, DATEADD(MONTH, n.n, m.m), DATEADD(MONTH, n.n+1, m.m)
  FROM n, (SELECT DATEADD(DAY, 1-DAY(@s), @s)) AS m(m)
)
 SELECT  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl, @Id AS Id,@StartDate as StartDate,@EndDate as EndDate, [Year] = CONVERT(VARCHAR(4), DATENAME(year, fd)), [MonthId] = CONVERT(VARCHAR(4), MONTH(fd)),[Month] = DATENAME(MONTH, fd), [Days] =CONVERT(VARCHAR(55), DATEDIFF(DAY, fd, ld))
  - CASE WHEN @s > fd THEN (DATEDIFF(DAY, fd, @s)+1) ELSE 0 END
  - CASE WHEN @e < ld THEN (DATEDIFF(DAY, @e, ld)-1) ELSE 0 END  ,(select count(parkingDemandDetailId) from tblParkingFeeDemandDetail where parkingFeeDetailId=@Id and demandYear=DATENAME(year, fd)and demandGenerateScheduleId= MONTH(fd)) as GenerateStatus

  FROM x;

RETURN 0
end
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tblLedger] WITH CHECK CHECK CONSTRAINT [FK_tblLedger_ToTable_4];

ALTER TABLE [dbo].[tblDemand] WITH CHECK CHECK CONSTRAINT [FK_tblDemand_ToTable_9];

ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH CHECK CHECK CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_2];

ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH CHECK CHECK CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable];

ALTER TABLE [dbo].[tblParkingFeeDemandDetail] WITH CHECK CHECK CONSTRAINT [FK_tblParkingFeeDemandDetail_ToTable_1];


GO
PRINT N'Update complete.';


GO
