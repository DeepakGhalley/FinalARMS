/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column minimumRate in table [dbo].[mstRate] is currently  DECIMAL (18, 2) NULL but is being changed to  DECIMAL (18, 3) NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  DECIMAL (18, 3) NULL.

The type for column rate in table [dbo].[mstRate] is currently  DECIMAL (18, 2) NOT NULL but is being changed to  DECIMAL (18, 3) NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  DECIMAL (18, 3) NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[mstRate])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstRate_ToTable]...';


GO
ALTER TABLE [dbo].[mstRate] DROP CONSTRAINT [FK_mstRate_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstRate_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstRate] DROP CONSTRAINT [FK_mstRate_ToTable_1];


GO
PRINT N'Starting rebuilding table [dbo].[mstRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_mstRate] (
    [rateId]        INT             IDENTITY (1, 1) NOT NULL,
    [taxId]         INT             NOT NULL,
    [slabId]        INT             NOT NULL,
    [rate]          DECIMAL (18, 3) NOT NULL,
    [minimumRate]   DECIMAL (18, 3) NULL,
    [effectiveDate] DATE            NOT NULL,
    [isActive]      BIT             NOT NULL,
    [createdBy]     INT             NOT NULL,
    [createdOn]     DATETIME        NOT NULL,
    [modifiedBy]    INT             NULL,
    [modifiedOn]    DATETIME        NULL,
    PRIMARY KEY CLUSTERED ([rateId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[mstRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_mstRate] ([rateId], [taxId], [slabId], [rate], [minimumRate], [effectiveDate], [isActive], [createdBy], [createdOn], [modifiedBy], [modifiedOn])
        SELECT   [rateId],
                 [taxId],
                 [slabId],
                 CAST ([rate] AS DECIMAL (18, 3)),
                 CAST ([minimumRate] AS DECIMAL (18, 3)),
                 [effectiveDate],
                 [isActive],
                 [createdBy],
                 [createdOn],
                 [modifiedBy],
                 [modifiedOn]
        FROM     [dbo].[mstRate]
        ORDER BY [rateId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstRate] OFF;
    END

DROP TABLE [dbo].[mstRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_mstRate]', N'mstRate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstRate_ToTable]...';


GO
ALTER TABLE [dbo].[mstRate] WITH NOCHECK
    ADD CONSTRAINT [FK_mstRate_ToTable] FOREIGN KEY ([taxId]) REFERENCES [dbo].[mstTaxMaster] ([taxId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstRate_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstRate] WITH NOCHECK
    ADD CONSTRAINT [FK_mstRate_ToTable_1] FOREIGN KEY ([slabId]) REFERENCES [dbo].[mstSlab] ([slabId]);


GO
PRINT N'Creating View [dbo].[ViewProertyTaxLedger]...';


GO
CREATE VIEW [dbo].[ViewProertyTaxLedger]
	AS 
select taxId,CalendarYear,TaxName,receiptId,CreatedOn,taxPayerId,MobileNo,FullName,CAddress,Cid,Ttin, PlotNo,PenaltyPeriod,sum(PenaltyAmount) as PenaltyAmount,sum(totalAmount) as totalAmount,
(sum(PenaltyAmount)+ sum(totalAmount)) as lastColumnTotal from (
select tm.taxId, tm.TaxName,l.totalAmount,format(l.CreatedOn,'MM/dd/yyyy') as CreatedOn,l.receiptId,tp.taxPayerId,tp.MobileNo,(tp.firstName + ' ' + isnull(tp.MiddleName,'')+ isnull(tp.lastName,'')) as FullName
,tp.CAddress,tp.Cid,tp.Ttin, ld.PlotNo, c.CalendarYear,l.PenaltyAmount,l.PenaltyPeriod from tblLedger l  
inner join mstTaxPayerProfile tp on l.taxPayerId=tp.taxPayerId
inner join mstLandDetail ld on l.landDetailId=ld.landDetailId
inner join MstTaxMaster tm on l.taxId=tm.taxId
inner join mstCalendarYear c on l.calendarYearId=c.calendarYearId
) tt group by taxId, TaxName,CreatedOn,receiptId,taxPayerId,MobileNo,FullName,CAddress,Cid,Ttin, PlotNo,CalendarYear,PenaltyPeriod
--order by taxId, calendarYear
GO
PRINT N'Refreshing Procedure [dbo].[rptGetTaxRates]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[rptGetTaxRates]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[mstRate] WITH CHECK CHECK CONSTRAINT [FK_mstRate_ToTable];

ALTER TABLE [dbo].[mstRate] WITH CHECK CHECK CONSTRAINT [FK_mstRate_ToTable_1];


GO
PRINT N'Update complete.';


GO
