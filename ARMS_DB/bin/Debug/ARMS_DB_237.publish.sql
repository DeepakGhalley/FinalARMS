/*
Deployment script for tt_db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tt_db"
:setvar DefaultFilePrefix "tt_db"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLE2019\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLE2019\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Dropping Default Constraint [dbo].[DF__tmp_ms_xx__isSub__4A58F394]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [DF__tmp_ms_xx__isSub__4A58F394];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_trnLandFeeDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[trnLandFeeDetail] DROP CONSTRAINT [FK_trnLandFeeDetail_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_trnLandTransferDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[trnLandTransferDetail] DROP CONSTRAINT [FK_trnLandTransferDetail_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstBuildingDetail_ToTable]...';


GO
ALTER TABLE [dbo].[mstBuildingDetail] DROP CONSTRAINT [FK_mstBuildingDetail_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_trnWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[trnWaterConnection] DROP CONSTRAINT [FK_trnWaterConnection_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_trnOccupancyCertificateApplication_ToTable_4]...';


GO
ALTER TABLE [dbo].[trnOccupancyCertificateApplication] DROP CONSTRAINT [FK_trnOccupancyCertificateApplication_ToTable_4];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLandOwnershipDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblLandOwnershipDetail] DROP CONSTRAINT [FK_tblLandOwnershipDetail_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_tblLandLease_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblLandLease] DROP CONSTRAINT [FK_tblLandLease_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] DROP CONSTRAINT [FK_mstWaterConnection_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_5]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_5];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_6]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_6];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_1];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_2];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_4]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_4];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_mstLandDetail_ToTable_3]...';


GO
ALTER TABLE [dbo].[mstLandDetail] DROP CONSTRAINT [FK_mstLandDetail_ToTable_3];


GO
PRINT N'Starting rebuilding table [dbo].[mstLandServiceType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_mstLandServiceType] (
    [landServiceTypeId] INT           IDENTITY (1, 1) NOT NULL,
    [landServiceType]   VARCHAR (150) NOT NULL,
    [isActive]          BIT           NOT NULL,
    [createdBy]         INT           NOT NULL,
    [createdOn]         DATETIME      NOT NULL,
    [modifiedBy]        INT           NULL,
    [modifiedOn]        DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([landServiceTypeId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[mstLandServiceType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstLandServiceType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_mstLandServiceType] ([landServiceTypeId], [landServiceType], [isActive], [createdBy], [createdOn], [modifiedBy], [modifiedOn])
        SELECT   [landServiceTypeId],
                 [landServiceType],
                 [isActive],
                 [createdBy],
                 [createdOn],
                 [modifiedBy],
                 [modifiedOn]
        FROM     [dbo].[mstLandServiceType]
        ORDER BY [landServiceTypeId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstLandServiceType] OFF;
    END

DROP TABLE [dbo].[mstLandServiceType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_mstLandServiceType]', N'mstLandServiceType';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[mstLandDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_mstLandDetail] (
    [landDetailId]            INT             IDENTITY (1, 1) NOT NULL,
    [lapId]                   INT             NOT NULL,
    [demkhongId]              INT             NOT NULL,
    [streetNameId]            INT             NOT NULL,
    [landTypeId]              INT             NOT NULL,
    [propertyTypeId]          INT             NOT NULL,
    [landUseSubCategoryId]    INT             NOT NULL,
    [plotNo]                  VARCHAR (145)   NOT NULL,
    [landAcerage]             DECIMAL (10, 2) NOT NULL,
    [landValue]               DECIMAL (10, 2) NOT NULL,
    [landPoolingRate]         DECIMAL (10, 3) NOT NULL,
    [structureAvailable]      BIT             NOT NULL,
    [plotAddress]             VARCHAR (255)   NOT NULL,
    [location]                VARCHAR (255)   NULL,
    [IsApproved]              BIT             NOT NULL,
    [createdBy]               INT             NOT NULL,
    [creationOn]              DATE            NOT NULL,
    [modifiedBy]              INT             NULL,
    [modifiedOn]              DATETIME        NULL,
    [transactionId]           BIGINT          NULL,
    [vacantLandTaxApplicable] BIT             NOT NULL,
    [garbageApplicable]       BIT             NOT NULL,
    [streetLightApplicable]   BIT             NOT NULL,
    [isSubdivided]            BIT             DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([landDetailId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[mstLandDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstLandDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_mstLandDetail] ([landDetailId], [lapId], [demkhongId], [streetNameId], [landTypeId], [propertyTypeId], [landUseSubCategoryId], [plotNo], [landAcerage], [landValue], [landPoolingRate], [structureAvailable], [plotAddress], [location], [IsApproved], [createdBy], [creationOn], [modifiedBy], [modifiedOn], [transactionId], [vacantLandTaxApplicable], [garbageApplicable], [streetLightApplicable], [isSubdivided])
        SELECT   [landDetailId],
                 [lapId],
                 [demkhongId],
                 [streetNameId],
                 [landTypeId],
                 [propertyTypeId],
                 [landUseSubCategoryId],
                 [plotNo],
                 [landAcerage],
                 [landValue],
                 [landPoolingRate],
                 [structureAvailable],
                 [plotAddress],
                 [location],
                 [IsApproved],
                 [createdBy],
                 [creationOn],
                 [modifiedBy],
                 [modifiedOn],
                 [transactionId],
                 [vacantLandTaxApplicable],
                 [garbageApplicable],
                 [streetLightApplicable],
                 [isSubdivided]
        FROM     [dbo].[mstLandDetail]
        ORDER BY [landDetailId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_mstLandDetail] OFF;
    END

DROP TABLE [dbo].[mstLandDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_mstLandDetail]', N'mstLandDetail';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnLandFeeDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[trnLandFeeDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_trnLandFeeDetail_ToTable_1] FOREIGN KEY ([landServiceTypeId]) REFERENCES [dbo].[mstLandServiceType] ([landServiceTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnLandTransferDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[trnLandTransferDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_trnLandTransferDetail_ToTable_1] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstBuildingDetail_ToTable]...';


GO
ALTER TABLE [dbo].[mstBuildingDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstBuildingDetail_ToTable] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[trnWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_trnWaterConnection_ToTable] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_trnOccupancyCertificateApplication_ToTable_4]...';


GO
ALTER TABLE [dbo].[trnOccupancyCertificateApplication] WITH NOCHECK
    ADD CONSTRAINT [FK_trnOccupancyCertificateApplication_ToTable_4] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLandOwnershipDetail_ToTable]...';


GO
ALTER TABLE [dbo].[tblLandOwnershipDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLandOwnershipDetail_ToTable] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLandLease_ToTable_1]...';


GO
ALTER TABLE [dbo].[tblLandLease] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLandLease_ToTable_1] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstWaterConnection_ToTable]...';


GO
ALTER TABLE [dbo].[mstWaterConnection] WITH NOCHECK
    ADD CONSTRAINT [FK_mstWaterConnection_ToTable] FOREIGN KEY ([landDetailId]) REFERENCES [dbo].[mstLandDetail] ([landDetailId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_5]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_5] FOREIGN KEY ([streetNameId]) REFERENCES [dbo].[mstStreetName] ([streetNameId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_6]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_6] FOREIGN KEY ([propertyTypeId]) REFERENCES [dbo].[enumPropertyType] ([propertyTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable] FOREIGN KEY ([lapId]) REFERENCES [dbo].[mstLap] ([lapId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_1]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_1] FOREIGN KEY ([landUseSubCategoryId]) REFERENCES [dbo].[mstLandUseSubCategory] ([landUseSubCategoryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_2]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_2] FOREIGN KEY ([landTypeId]) REFERENCES [dbo].[mstLandType] ([landTypeId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_4]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_4] FOREIGN KEY ([demkhongId]) REFERENCES [dbo].[mstDemkhong] ([demkhongId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_mstLandDetail_ToTable_3]...';


GO
ALTER TABLE [dbo].[mstLandDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_mstLandDetail_ToTable_3] FOREIGN KEY ([transactionId]) REFERENCES [dbo].[tblTransactionDetail] ([transactionId]);


GO
PRINT N'Refreshing View [dbo].[ViewProertyTaxLedger]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ViewProertyTaxLedger]';


GO
PRINT N'Altering Procedure [dbo].[rptDailyPaymentWiseDemandCollection]...';


GO


--exec [dbo].[rptDailyPaymentWiseDemandCollection] '20210424', '20210430'
ALTER PROCEDURE [dbo].[rptDailyPaymentWiseDemandCollection] 
@StartDate date, @EndDate date
AS
BEGIN
	SET NOCOUNT ON;	
	SELECT ROW_NUMBER() over(order by(select 1)) as Sl,convert (varchar, @StartDate,103)  as FromDate,convert (varchar, @EndDate,103)  as ToDate,
	CONVERT(varchar, pl.createdOn,103) as PaymentDate, pm.paymentMode as PaymentMode,
	SUM(pl.amount) as SubTotal
	from  tblPaymentLeger pl 
	inner join enumPaymentMode pm on pl.paymentModeId = pm.paymentModeId
	where 		FORMAT (pl.createdOn, 'yyyyMMdd') >= FORMAT (@StartDate, 'yyyyMMdd') 
	and FORMAT (pl.createdOn, 'yyyyMMdd') <= FORMAT (@EndDate, 'yyyyMMdd') 
	group by pm.paymentMode,CONVERT(varchar, pl.createdOn,103)

	--select SUM(gt.amount) as GrandTotal from tblPaymentLeger gt

end
RETURN 0

-- exec [dbo].[rptOnlinePaymentByFromDateToDate] 20/02/2021
GO
PRINT N'Altering Procedure [dbo].[rptIndividualReceiptWiseCollection]...';


GO



ALTER  PROCEDURE [dbo].[rptIndividualReceiptWiseCollection]
@FromDate  date ,@ToDate  date,@UserId int
AS
BEGIN
SET NOCOUNT ON;
-- CASH 1

 SELECT  ROW_NUMBER() OVER(
       ORDER BY (select 1)) AS Sl, * from (
(
select convert (varchar, @FromDate,103)  as FromDate,convert (varchar, @ToDate,103) as ToDate,
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate,
convert(varchar ,pl.createdOn,103) as PaymentDate ,sum(pl.amount) as Cash,0 as Cheque
,(u.FirstName +' '+ ISNULL(u.MiddleName,'')+' '+ ISNULL(u.LastName,'')) as UserName
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
left join AspNetUsers u on pl.createdBy=u.UserId
where pl.paymentModeId=1 and
convert (varchar,pl.createdOn,103) >= convert (varchar, @FromDate,103)
and convert (varchar,pl.createdOn, 103) <= convert (varchar,@ToDate, 103)

group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate,u.FirstName, u.MiddleName, u.LastName
)
UNION all
-- CHEQUE 2
(
select
convert (varchar, @FromDate,103)  as FromDate,convert (varchar, @ToDate,103) as ToDate,
r.receiptNo AS ReceiptNo, isnull(pl.paymentModeNo,'-') as PaymentModeNo ,isnull(convert(varchar ,pl.paymentModeDate,103),'') as PaymentModeDate

,convert(varchar ,pl.createdOn,103) as PaymentDate ,0 as Cash,sum(pl.amount) as Cheque 
,(u.FirstName +' '+ ISNULL(u.MiddleName,'') +' '+ isnull(u.LastName,'')) as UserName
from [dbo].tblPaymentLeger pl
left join [dbo].[tblReceipt] r on pl.receiptId= r.receiptId
left join AspNetUsers u on pl.createdBy=u.UserId
where pl.paymentModeId=2 and 
convert (varchar,pl.createdOn, 103) >= convert (varchar,@FromDate, 103)
and convert (varchar,pl.createdOn, 103) <= convert (varchar,@ToDate, 103)
group by convert(varchar ,pl.createdOn,103),r.receiptNo,pl.paymentModeNo,pl.paymentModeDate,u.FirstName, u.MiddleName, u.LastName
)) gg
order by ReceiptNo
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[trnLandFeeDetail] WITH CHECK CHECK CONSTRAINT [FK_trnLandFeeDetail_ToTable_1];

ALTER TABLE [dbo].[trnLandTransferDetail] WITH CHECK CHECK CONSTRAINT [FK_trnLandTransferDetail_ToTable_1];

ALTER TABLE [dbo].[mstBuildingDetail] WITH CHECK CHECK CONSTRAINT [FK_mstBuildingDetail_ToTable];

ALTER TABLE [dbo].[trnWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_trnWaterConnection_ToTable];

ALTER TABLE [dbo].[trnOccupancyCertificateApplication] WITH CHECK CHECK CONSTRAINT [FK_trnOccupancyCertificateApplication_ToTable_4];

ALTER TABLE [dbo].[tblLandOwnershipDetail] WITH CHECK CHECK CONSTRAINT [FK_tblLandOwnershipDetail_ToTable];

ALTER TABLE [dbo].[tblLandLease] WITH CHECK CHECK CONSTRAINT [FK_tblLandLease_ToTable_1];

ALTER TABLE [dbo].[mstWaterConnection] WITH CHECK CHECK CONSTRAINT [FK_mstWaterConnection_ToTable];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_5];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_6];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_1];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_2];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_4];

ALTER TABLE [dbo].[mstLandDetail] WITH CHECK CHECK CONSTRAINT [FK_mstLandDetail_ToTable_3];


GO
PRINT N'Update complete.';


GO
